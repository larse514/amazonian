// Code generated by go-bindata. DO NOT EDIT.
// sources:
// ias/cloudformation/containertemplate.yml
// ias/cloudformation/ecs.yml
// ias/cloudformation/vpc.yml

package assets

import (
	"bytes"
	"compress/gzip"
	"crypto/sha256"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes  []byte
	info   os.FileInfo
	digest [sha256.Size]byte
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _iasCloudformationContainertemplateYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x58\x6d\x4f\x1b\xb9\xf6\x7f\x3f\x9f\xe2\x2c\xbc\x88\xb4\xca\xd0\x40\x4b\x01\x4b\xe8\xaf\x21\xa1\x6c\xfe\x0b\x34\x37\x43\x69\x77\xab\x0a\x39\x9e\x93\xc4\x97\x89\x3d\xb2\x3d\xb0\xd9\x4f\x7f\x65\x7b\x1e\x3c\x49\x68\xb9\xbb\xba\x57\xb7\x2f\x2a\x62\x1f\x9f\x27\xff\xce\xf9\x1d\xcf\x7e\xa9\xe9\x02\x49\xb4\x4f\x9f\x35\xb0\x5c\x96\xd9\x5c\xaa\x15\x35\x5c\x0a\x28\x28\x7b\xa4\x0b\x84\x38\x36\xb8\x2a\x72\x6a\x30\x9e\xf3\x1c\x81\xae\xe8\x9f\x52\x70\x2a\x0c\x0a\x2a\xcc\xc1\x7a\x95\x43\x1c\xcb\xd2\x14\xa5\xf9\xbe\x68\x25\x54\x9d\xd0\x6f\xe3\x59\xc9\x1e\xd1\x00\xe3\x8a\xe5\xc8\xf8\x41\x86\x45\x2e\xd7\x74\x96\xa3\xde\xe9\x92\xdf\xff\x91\x47\x5d\x33\x8c\x16\x74\xc6\x73\x6e\x38\x6a\x18\x26\x93\xe4\x62\x7c\x3d\xbe\xfb\xed\x61\x9c\xdc\x58\x27\x0c\x65\x8f\xb1\xa0\xab\x40\x4b\x8c\x4c\xc7\x9a\x8b\x45\x6e\x83\x2f\xa8\xa2\x2b\x34\xa8\x62\xf9\x84\x4a\xf1\x0c\x35\xdc\x17\x6c\x9c\x9d\x3f\x15\x2c\x66\x27\x94\x9e\x9c\xcc\x10\x90\x69\x96\x97\xda\xa0\x3a\xdf\xa5\x28\xbe\x1c\xa6\x43\xbf\x1f\x1f\x5e\x7d\x3c\x9d\xa4\x57\x1f\x87\x9f\x6e\x3e\xfc\x66\x0f\xe6\x33\xaa\xc4\x39\x55\x82\xd0\x67\x4d\x30\xa7\xda\x70\x96\x4b\x9a\xcd\x68\x4e\x05\xe3\x62\x41\x4a\x1d\x23\xd5\x26\x3e\x24\xef\x0e\x4f\xde\x1f\x1e\xbf\x1b\x9c\x9d\x9d\xbc\x23\x86\xaa\x05\x9a\x85\x92\x65\xf1\xe6\x72\x98\xde\x25\xd3\xab\xe9\xe4\xcd\xe0\x14\x4f\x4f\x06\xef\x8f\xd9\xfb\x23\x1c\x9c\x1d\x53\x6f\x23\x13\xda\xc6\x79\x7e\x39\x4c\xaf\x2f\xe2\xb3\xb7\x87\xa7\xa7\x83\x93\xb3\xc1\x41\xa3\xfa\x00\xf3\xd9\x81\x77\x9e\x3e\xeb\x03\x26\x57\x40\xf3\x59\xce\xb5\x41\x81\xea\xfc\x89\xe6\x25\x7a\x55\x4b\xa9\x0d\x66\x7f\x4a\x81\x3c\x3b\xff\xfd\xed\x71\xfa\x65\xf4\xf1\x6e\xfa\x8f\x93\x2f\x27\xbf\xc2\x2f\x6e\xef\x77\x29\xf0\xd6\x5a\x7b\xd2\x3a\xc3\x27\xcc\x65\xb1\x42\x61\xac\xd2\x03\x18\x49\xf6\x88\x6a\x8a\xba\x90\x9a\x1b\xa9\xd6\xe7\x4f\xa8\x84\x14\x5a\xce\xcd\x33\x55\xa8\x65\x5e\xda\xfb\xd6\x6f\x9a\x54\xfa\x2c\x72\xa1\x0d\x15\x0c\x21\x45\xf5\xc4\x99\xb7\x30\x53\x34\xcb\xa9\xd2\x28\xa2\x68\x3f\xbc\x93\x68\x5f\x97\x33\x81\x26\x9e\xbd\x3f\xcc\x4e\x0f\xe7\xd8\xaf\x7e\x0f\x8e\x06\x47\x19\x3b\x3e\x8d\x92\xcf\xe9\x5d\x85\xa4\x0f\x0e\x64\xf7\xa8\x34\x97\x82\x40\xef\x68\x70\x38\x88\x07\x67\xf1\xe0\xac\x17\x4d\x6a\x08\x68\x12\x41\x68\xdb\xfe\x04\xb8\x5b\x17\x48\x20\x35\x8a\x8b\x85\x5b\x18\xa1\x66\x8a\x17\xc6\x69\xb2\x72\x20\xe7\xc0\xa4\x30\x94\x0b\x54\x11\xc0\xb0\xfe\xfb\xef\x28\x71\x20\x0c\x0f\x27\x9f\x53\x42\x2e\x87\x47\x84\xdc\x4f\x86\x84\x8c\xb3\x6d\x3d\x29\xe6\xc8\x0c\x50\xb8\x9f\x0c\xc1\x2c\xa9\x01\x9a\xe7\xf2\x59\x43\x9d\x59\x0d\x94\x31\xd4\x1a\x8c\x04\xb3\x44\x18\x0b\x83\x4a\xa0\x39\x88\x00\x26\x8a\x4b\xc5\xcd\x3a\xb4\x79\x5b\xae\x66\xce\x9b\x0d\x43\xc9\xf5\x05\xa8\x32\x47\x28\xaa\x43\x20\x6a\xc9\x2e\x40\x5e\x13\x7d\x75\x04\x2c\xe0\xc0\x62\x38\x82\x6d\x1c\xbe\x46\xd1\xa5\x2f\x2d\xb8\x96\x34\x83\x0b\x57\x5c\xa8\x60\x48\x85\x14\x5c\x30\x9a\xd7\x86\xac\x73\xe0\xf2\x17\x56\xce\x5f\xb7\x30\xba\x4d\xdd\x15\xd6\x0a\x6d\xa9\xff\x65\x65\xc9\xf4\xd6\xeb\xa9\xfa\xcd\xab\x34\x0d\x53\xa8\xda\x4f\x04\x61\x55\xbf\xe6\xb0\xbd\xcb\x5a\x1e\xa8\x12\x11\x00\x5f\x39\xda\xf8\xf1\x59\x5f\xea\x5e\x1e\x14\xd6\x05\x1f\x45\x53\xd4\xb2\x54\x0c\x35\x89\x22\x80\x7d\x98\x22\x93\x2a\x83\x14\x0d\xcc\xa5\x6a\x9b\x71\x83\xcc\xb6\xf2\x46\xb7\xa9\x37\xdd\x01\xfe\x54\x96\x06\x8f\xdf\x12\xe2\x35\xa5\x68\xae\x6c\x5b\xac\x04\x27\x4a\x16\xa8\x2c\x07\xd4\x47\xb7\x80\x08\x3f\xfd\xbf\xe4\x02\xbe\xee\x1d\xec\xf5\xe1\x2b\xfc\x34\xc5\xf9\x86\x08\xf4\x61\x6f\xef\xdb\xb7\x46\xc1\x50\xae\x6c\x53\x23\x1e\x2f\xb4\xc0\x3f\x80\xe6\x9c\x6a\xf0\x6d\x19\x33\x5b\x45\x57\xdc\xe4\x74\x76\xd0\x1c\x6a\xdc\x0b\x3c\x89\xa1\x2d\x85\xfa\xdf\x0e\x6f\x82\xce\x03\xfd\x5d\x0e\x06\xbe\x35\xb9\x09\x56\x12\xeb\xdc\x9d\xf3\xad\x6b\xab\xd5\x32\xce\x88\x57\xbc\x55\x5f\x9d\x03\xa3\xdb\xb4\xca\x59\x23\x5b\x15\x89\xbb\x4d\x23\x33\x19\x83\xc2\x95\x7c\x42\x30\x4b\xae\xff\x2f\x02\x70\xbc\x73\x5d\xe1\x68\x5a\xe6\xb8\xdd\xbb\x3c\xde\x2d\xdc\x2f\x6a\xe6\xbb\x3f\x22\x24\x3c\x14\xed\xbe\xcd\x84\x39\xc2\xa8\x7f\xc6\x95\xda\xb9\x54\xcf\x54\xb5\xbe\xfb\xe0\x1d\x30\x12\x25\x2a\xf7\x7b\x0d\x73\xf6\xa2\xfa\x62\x45\xc6\x37\x14\x7e\xe0\x98\x67\x04\x6c\x4a\xe2\x25\xd2\xac\xea\x7a\xf6\xdf\xbd\x65\xc6\xce\x75\xfe\xad\xcb\xab\xc3\x0d\x3c\x0c\x2a\xb6\xd7\x20\xba\xea\xc6\x5e\xa4\xfe\xe9\x13\xed\xc3\x79\x75\x82\x83\xb4\xbc\x90\xdf\x5f\x90\xe6\x66\x39\x5c\x22\x7b\x74\x94\xf0\x44\xf3\x14\x99\x14\x99\x26\x70\x38\xd8\x16\x9a\x50\xb3\x24\xf0\x66\xc7\x86\x92\x46\x32\x99\x13\xf8\xe5\xee\x6e\xb2\xbd\x7f\xc7\x57\x28\x4b\xd3\x28\x3f\xee\x88\xac\xef\x96\x0a\xf5\x52\xe6\xd9\x50\x96\xb6\xf2\x8e\xaa\xed\x00\x8d\x41\xa2\xeb\x54\x49\x65\x08\x9c\x0e\xda\x5e\xb0\xed\xc2\x0d\x35\x6c\x59\xf7\x43\x67\xd0\x98\x62\x28\x33\x74\xb3\xc0\xa0\xce\xfa\x27\xb1\xfc\xbe\x23\x21\xc2\x8c\x51\x7c\x56\x1a\x0c\x50\xf4\x2b\xae\x09\x64\xa8\x70\xc1\xb5\x51\x6e\xaa\x7d\xc8\x30\xa7\xeb\x03\xe3\x03\x7f\xd0\x3e\xf2\x2e\xb8\x9c\x13\xb5\x0f\x9e\xf8\x2b\x64\xb8\x1f\x3d\x5b\x75\xda\xc7\xbd\x63\x22\x48\x09\xa9\x92\x52\x35\xe8\x02\x45\xa6\x3f\x8a\xd6\xad\xb6\xb3\xbe\x70\xff\x15\x79\xd4\x56\x5b\xf6\xa9\x9d\x1a\xa1\xe6\x0a\xeb\x6c\xf4\x0e\xdb\x75\x3b\xb2\xdb\x36\x39\x94\x62\xce\x17\xa5\x0f\xba\xcd\xf3\x0d\xfd\x83\xaf\xca\xd5\x04\x15\x73\xbd\xf4\x68\x30\x68\xf7\xb8\xb0\x7b\xd5\xdd\x37\x22\xb5\x40\x8b\xe3\x6a\x34\xf3\xc1\x74\xa7\x2b\xef\x71\x67\x2d\x68\xe0\xd5\x6a\x85\x90\x77\xa7\xef\xbe\xdf\x2a\x9a\xd2\xaa\xc4\xa6\x32\xc7\xa0\x8b\x54\x69\xb4\xab\xbd\x06\x0f\xfa\x71\x84\x73\x2e\xb8\x27\x44\x2f\x6b\xa8\x7e\xcc\x9a\x55\x77\x7d\xdd\xa5\xdd\xb7\xd8\x55\xf6\xc2\x55\x7d\xa0\x2b\x9e\xaf\x1b\x3a\xeb\xf5\xfa\xf0\xd5\x5b\x75\x8a\x52\xfb\xe2\xb1\x59\xe8\xf5\xc1\x3e\x50\x9a\xb6\xd3\x24\xa3\xb5\xd0\x26\xb5\x49\xcb\x0f\x73\x3a\x76\xa3\x81\x97\x70\xb4\xdf\x66\xbb\x28\x09\xec\x1d\x0f\xf6\x9a\x15\x9b\xf6\x1b\x5a\x14\x5c\x2c\x74\xc8\x48\x71\x87\x6c\x76\xdc\x12\xb4\x10\xc1\x95\x54\x6b\xa7\x37\x50\x7c\xa9\x35\x0a\xc3\x69\x4e\x60\xcf\xa8\x12\xf7\xec\x62\xe4\x7b\x63\x70\x49\x5b\x59\x1e\x27\x37\x76\x92\x78\x99\x66\xb4\x2e\x57\xee\xe8\x44\xe6\x9c\xad\x47\x92\x95\x6e\x04\x68\x2c\xa7\x86\x1a\xec\x2e\xc5\x70\x39\x9f\x23\x33\x04\x12\x3b\x6c\x07\xb1\x4d\x14\x17\x8c\x17\x34\xef\xd2\x71\xe5\x21\x81\xaf\xc8\x74\xf7\x45\x16\x12\xbc\xe7\x3c\x02\x5f\x7b\xda\x68\xd2\xba\xd6\xab\x85\xba\x4d\xd8\x79\xcc\xc3\x66\xe4\x63\xf0\x37\xea\x9e\xaa\x41\x93\x68\x4e\xec\x88\x71\x67\x94\xdf\x8b\x33\xf4\x75\xe7\xf3\x76\x54\x75\x44\x54\xe3\xfa\x21\xf2\x41\xc9\x55\x58\xe0\xbd\x3e\xfc\xe8\xac\x2f\x59\xdd\xeb\x77\x4c\xc3\x8b\xe7\xec\x9c\x3a\xc3\x9f\x5f\xd4\x3c\xdd\xf4\xe9\x33\x37\xcb\xae\x4f\xaf\xb2\x34\xdd\xf4\xcf\x36\xd0\xa3\x0d\x07\xd8\x11\x49\x4a\xb3\x94\x8a\xff\x89\x29\xb2\xd2\x92\xb9\xeb\x3e\x63\xb1\x50\xa8\x75\xef\x5b\xc7\x56\x3d\x3f\x13\xe8\xfd\xec\xfa\x47\x05\x9a\x94\xd1\x9c\x8b\x45\x38\xe5\x05\xf8\x4e\x8a\x22\xe7\xcc\x75\xe0\xa4\x34\xb2\x12\x26\xc4\xfe\x41\x67\x39\xfa\x63\x1b\x2c\x01\x21\x2e\xb6\x6b\xe2\x86\xfe\x31\xa4\x05\x65\x6e\x16\xa9\x69\xf0\x86\x8b\x76\xf1\x30\xea\xfa\xec\xd8\x2b\xe8\x4e\x95\xfe\x37\xfd\x6d\x76\xe9\x83\x5d\xbd\x42\x93\x18\xd3\x08\xf6\xc1\xcf\x4b\xdf\x82\x2e\x9c\x4c\x6f\x49\x2b\x68\x83\xd3\x3e\x38\xbb\xd9\x87\x44\x89\x5a\xba\x8e\x75\xc4\x57\x28\xfc\x6b\x1f\x99\x26\x35\x7d\x86\x44\x16\x75\xea\xd1\x1a\xd5\x05\x65\xbe\x5a\xb6\x73\xee\xcb\xe5\xdf\xca\x79\x73\xea\x85\xdc\x86\x15\x9a\xa4\x06\x8b\x40\xba\xde\xad\x1f\x60\x58\x54\x1a\x83\x38\x1b\x24\xb4\x03\xc3\x2e\x9c\xd4\x64\x15\x28\xf1\xba\x5f\xe0\xec\x24\xfb\x67\xa9\x8d\xad\x7f\x6f\xbc\x62\xe6\xe1\x92\x8a\x05\x8e\x9b\x9b\x0f\x78\x56\xe6\x99\x7c\x16\x04\xde\x07\xe4\x8e\x46\x71\x96\x2c\x16\x0a\x17\x4e\x7f\x95\xb3\x27\x54\x21\x6b\x58\x9f\x5a\x7b\x9d\x29\xdb\x6b\xa8\xe7\xd1\x6b\xf9\x8c\xea\x42\x96\x22\x6b\x27\x84\x20\x0f\xad\x0e\x3f\x63\x44\x00\x1b\x28\xf9\x9f\x67\x03\xda\x22\x29\xa6\xad\xef\xff\x25\x86\xa8\x0a\x24\xb4\xfc\x9f\x65\x8a\x17\xc2\x25\xae\x5f\xba\x2f\xc3\xcf\x76\x68\x6f\xfa\x68\x92\x53\xb5\xd2\x1b\x9b\x93\xd2\x54\x40\xb3\xbb\x3b\x1a\x36\xd3\x8d\x82\x2a\xd3\x55\x83\xd6\xe4\x53\x91\x51\x53\xaf\xfe\xa8\xff\x26\xd7\x17\xc7\x83\x81\x76\x66\x2c\xe4\xf0\x53\xb1\x05\xa8\xa1\xf5\xeb\xb3\xf3\x8b\x38\xc1\x17\x80\x75\xf9\x44\xf3\xd2\x05\x3e\x41\xc5\xa5\x7d\x07\xb5\x13\xb5\xcd\x28\xb7\x24\xb3\x59\x2b\xcd\x93\xc4\x4a\x37\xaf\x05\x67\xa7\xfb\x3d\xc7\xae\x00\x9f\x83\x2c\x95\xfb\xb8\xb3\xb0\xef\x4a\x6a\x50\x83\x91\x12\x56\x54\xac\xdd\xcb\x08\x6c\x3c\xf5\x87\x0b\xef\x08\x81\xde\xfb\xae\xe6\xfa\xe1\x5d\xcf\x98\xbb\x5a\x62\x93\xba\xa0\x83\x26\x9f\xd3\x37\x41\x67\xbc\xbc\xbe\xa8\x1f\x0c\x75\x5b\x0e\x60\xe8\x01\xd8\xce\x6e\x9b\x8f\x23\x6f\xba\x02\x68\xfb\x88\x5f\x15\x54\x71\x2d\xc5\xc7\xc2\x86\x27\x15\x81\x2b\x85\xd4\x12\xf1\x92\x8a\x26\x5b\x35\x63\x39\x94\x78\x4b\x36\x7a\xfb\xf6\x7b\xb8\xbc\xbe\x78\x38\xfe\xf2\xe5\xc1\xb3\x41\x04\xb0\x3f\x6c\xa0\x75\x2d\x17\xda\x11\x34\x71\x1f\xb0\xc2\x7b\xb6\x5b\xee\xff\xfa\x49\xbd\xbf\x79\xcb\xfb\xe0\xde\x2f\x5e\xa0\xf3\xf9\xa9\x17\x5b\x4a\xbc\x1c\xa6\xf5\x6e\xcd\x8a\x1b\xd3\xbb\x63\xbf\x7d\x0f\x45\x63\x87\x5d\x29\xc6\x62\x44\xd7\xf6\x41\xfe\xee\x5f\x01\x00\x00\xff\xff\xba\x62\xa5\x03\xd8\x19\x00\x00")

func iasCloudformationContainertemplateYmlBytes() ([]byte, error) {
	return bindataRead(
		_iasCloudformationContainertemplateYml,
		"ias/cloudformation/containertemplate.yml",
	)
}

func iasCloudformationContainertemplateYml() (*asset, error) {
	bytes, err := iasCloudformationContainertemplateYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ias/cloudformation/containertemplate.yml", size: 6616, mode: os.FileMode(420), modTime: time.Unix(1519595092, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x91, 0x9d, 0x5d, 0xf2, 0x31, 0x63, 0x46, 0xd6, 0x61, 0x11, 0x27, 0xd3, 0x7e, 0x83, 0x3e, 0x5c, 0x20, 0x4f, 0x88, 0xf8, 0x42, 0x6f, 0xe0, 0x35, 0xdf, 0x71, 0xeb, 0xdf, 0x4d, 0xbe, 0x35, 0x56}}
	return a, nil
}

var _iasCloudformationEcsYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x59\xff\x6f\xdb\xb8\x0e\xff\x3d\x7f\x05\xb7\x1e\x10\xe0\x50\xb7\xf9\xd2\x6e\xad\xf1\x76\x87\x34\xcd\xb6\xbc\x4b\xef\x82\x38\x6b\x71\xaf\x28\x06\x45\x66\x12\xa1\xb2\x64\x48\x72\xdb\xdc\xbd\xfb\xdf\x1f\x24\xdb\xb1\x1d\x3b\x6d\xb1\xb7\x2f\x18\x26\x53\x1f\x91\x14\x49\x51\xa4\x72\x90\x68\xb2\x42\xbf\x75\x40\x1e\x35\x50\x2e\x93\x70\x29\x55\x44\x0c\x93\x02\x62\x42\xef\xc9\x0a\xc1\xf3\x0c\x46\x31\x27\x06\xbd\x25\xe3\xb8\x03\x3b\x46\xaa\x8f\x36\x11\x07\xcf\x93\x89\x89\x13\xb3\x83\x46\xaa\xb3\x89\x0c\xa5\xfb\xde\x22\xa1\xf7\x68\x80\x32\x45\x39\x52\x76\x14\x62\xcc\xe5\x86\x2c\x38\xea\x46\x4d\xd2\xf9\x9a\x22\x35\xd6\x94\xc4\x64\xc1\x38\x33\x0c\x35\x0c\x07\xd3\xc1\xc5\x78\x32\x9e\xff\xf9\x75\x3c\xb8\xb2\x82\x0d\xa1\xf7\x9e\x20\x11\x42\x24\x65\xc8\xd1\xb3\x0c\x34\x13\x2b\x6e\x37\x19\x13\x45\x22\x34\xa8\x3c\xf9\x80\x4a\xb1\x10\x35\xfc\x86\x9b\xdf\x49\x84\x1f\xc2\x24\x8a\x36\x5f\xef\x71\xd3\x85\xeb\x98\x8e\xc3\x0f\x0f\x31\xf5\xe8\x7b\x42\xde\xbf\x5f\x20\x04\xc9\x42\xa0\x19\x87\x1f\xb4\x1b\x78\x8b\x77\xdd\xf0\xac\xbb\xc4\xc3\xec\xbb\xd3\xeb\xf4\x42\x7a\x7a\x06\x63\xa1\x0d\x11\x14\xe7\x9b\x18\x3f\x98\xde\x51\x84\x21\x4b\x22\xb8\x94\x11\x61\xc2\x09\x6a\xb5\x0e\xca\xac\x5b\x07\x2f\xb0\x6c\x0d\x6e\x82\x79\x66\x94\x8f\xce\x5e\xd7\xa8\x34\x93\xc2\x87\x76\xaf\xd3\xed\x78\x9d\x73\xaf\x73\xde\x6e\x4d\xf3\xcd\x69\xbf\x05\x25\x81\xf6\x0b\xc0\xea\xe3\x43\x60\x14\x13\x2b\x47\xb8\x44\x4d\x15\x8b\x8d\x63\x94\xa2\xc1\x19\x6e\x29\x15\x58\x61\xd6\x37\x2d\xc8\xed\x53\xe6\x32\xb8\x09\x7c\x7f\x34\xec\xf9\xfe\x6f\xb8\x99\x12\xa6\xdc\xc0\xa2\xea\x9c\x2d\x15\xe4\x12\x88\x00\x7c\x62\xda\x30\xb1\x82\xd1\xb0\x07\xd9\x4a\x30\x12\x50\xd8\xb0\x80\x20\xf8\x0c\x84\x52\xd4\xda\x12\xcd\x1a\x61\x34\x0c\x80\x65\xf6\xd4\x47\x2d\x48\x1d\xd3\xac\xc9\xf5\x74\xe8\xfb\xe3\xb0\xae\x40\x80\x1c\xa9\x01\x02\xd7\xd3\x21\x98\x35\x31\x40\x38\x97\x8f\xba\xe0\xbc\x23\x75\x2c\x0c\x2a\x81\xc6\x0a\xcc\xdd\x5e\x96\x39\x61\xda\xfc\xab\x10\x9c\x42\xac\xec\x5f\xf6\x0b\x37\x60\x1e\x25\xa4\x8e\xb5\x92\x61\x23\x13\x05\xda\xcd\x62\x68\x55\xb3\xd2\x2e\x51\x33\x85\xe1\x90\xc4\x84\x32\xb3\x29\x0b\xfd\x3d\x89\x16\xa8\x32\x01\x4b\x92\x70\xe3\x43\xbb\xdb\x6e\xb0\xb7\x03\x5a\x8b\x17\xfb\x33\x12\x38\x49\x04\x5d\x6f\x25\x5b\xcb\x52\x9e\x68\x83\xca\x0a\xbe\x22\x4f\x01\xfb\x0b\xbf\x49\xe0\x15\x79\x62\x51\x12\x81\x68\x12\x6c\xcd\x4d\x89\x80\x05\x66\x1a\x60\xb8\x4f\x87\xf2\xc1\xf1\xeb\x62\x6c\xcc\xe4\x8c\xc1\x6c\x62\xdc\x17\xd5\x99\xae\xf6\xe8\x31\xaa\xa4\xa3\x0e\xac\xc7\x31\xbc\x26\x3c\x41\xed\xc3\x6d\x3e\x79\x68\x61\x3a\x22\x9c\xbb\x51\x7a\x56\xdd\x90\x13\xb5\xc2\x43\x88\xfa\x5b\x62\xd4\xcf\x88\x8e\x23\xd8\xef\xa7\x02\xd5\xdb\x8e\x4f\x8e\x8a\x51\x89\x58\x06\x9c\x94\xc6\xdd\xce\x53\x85\x2d\xdd\xae\xa7\xc5\x7a\x5a\x5a\x4f\x4b\xeb\xe9\xc9\xd1\xd9\x76\xdc\x3f\x2a\x46\x3b\x3c\x4b\xfa\xd1\x7e\x69\x79\xbf\x58\xae\xb6\xcb\x55\xb1\x31\x55\x5a\xa8\x8a\x85\x19\x5b\x55\x5a\xce\x7a\x47\xa5\x61\xaf\x34\x3e\x29\x8d\x33\xf8\x9d\x63\x30\x94\x42\x1b\x45\x98\x30\x15\x47\x4f\x39\x12\x8d\x40\xd7\x52\x6a\x04\x02\x0f\x84\xb3\xb0\xea\x7a\x1b\x2e\x07\x97\x92\xde\xa3\x9a\x61\x2c\x35\x33\x52\xa5\xa7\xe5\xa0\x1a\x34\xc5\x2c\x50\x29\x0c\x61\xc2\xa6\x9f\xd0\xad\x04\x16\x91\x15\x6a\xa7\xca\x41\x25\x8e\x5a\x57\x24\x8e\x99\x58\xb9\x3c\x3a\xb8\x09\x66\xb8\x62\x52\xcc\xe5\xe0\x6a\x9c\x06\x66\xa2\x3d\x24\xda\x78\x5d\x3f\xb3\xc4\xe0\x6a\x3c\xbe\xf4\x81\x44\xcc\x43\x4a\x7a\x67\xe7\xcb\x45\x05\xd8\x6b\x00\x9e\x9c\xbc\x5b\xf6\x4f\x7b\xdd\x1c\xf8\x88\x7b\x38\x9e\x2f\x49\xb8\x3c\x5b\x2e\x2b\xc0\x26\x8e\xef\xc9\x82\x76\xbb\x5d\xe2\x66\x30\xd9\xcf\x91\x74\x4f\xce\xbb\x24\xec\xe5\x40\x8a\xc2\x28\xc2\x1b\xb1\xa7\x27\xcb\xd3\x7e\xa7\x9f\xee\x87\xc4\x9e\x90\xca\xac\xf7\xee\xfe\x9c\x86\xa7\xef\x97\xcb\x30\x47\x6b\x99\x3c\x83\x26\xe7\x9d\x0e\xe9\x53\x52\x47\x37\x6d\xef\xf4\xfd\x59\x77\x81\xfd\x93\xd6\x0c\xb5\x4c\x14\x45\xed\xb7\x6c\x20\x7c\xe3\x1f\xbb\xd4\xfe\x83\x00\x69\xa2\x98\xd9\xc0\x27\x25\x93\xd8\x66\x10\x26\x98\x8d\x1f\x9d\x43\xbe\x5d\xc2\x88\xea\x9c\xbd\xe3\xde\x7c\x77\x55\x20\x0e\x31\x55\x32\x46\x65\x6b\x9c\xdc\x10\x6e\x6e\x27\x23\x06\x3b\xba\x67\xd0\xf4\x96\x84\x37\x33\x5c\x42\xdb\x7d\xd8\xb4\xdd\xa0\xcd\x60\x72\x11\x4b\x65\xf4\x2b\xb4\x1a\x8b\x95\x42\xad\x9f\x53\xae\x90\xb9\x2b\xa7\x9d\xc1\xc6\xf1\x54\x49\x23\xa9\xe4\x3e\x18\x9a\xab\xfb\x51\xc9\x68\x2a\x95\xbd\x5f\xfa\xdd\x4e\xa7\x93\xa3\xe7\x32\xa3\xbe\x2b\x53\x03\xe7\xfa\xaa\x6e\xcf\x08\x6e\x01\x7c\x36\x26\xfe\x61\x4e\xb0\xcc\x77\x23\x68\x81\xe6\x11\x51\xc0\x68\x72\x01\x44\x84\xce\x51\xc3\xf4\xa2\x7b\xce\x43\x4d\xaa\x8e\xc5\x42\x26\x62\x4f\xc9\xf3\xed\x0e\xaa\xc9\x79\xb5\x87\x1a\xbc\x73\x7a\xda\x3f\x7d\x95\x77\x1a\xa4\xb6\x00\x6e\x70\xf1\xc3\xbc\x73\x83\x8b\x97\x9c\x63\x2b\xbe\x1b\xa9\x78\xf8\x8c\x6b\x1a\xb4\xfc\x3c\x9f\x4f\xd9\x8f\x71\xce\xae\xa8\x57\xfb\xe6\xe4\xa4\x5f\xf3\x4e\x89\x36\x64\xa1\x1a\xc7\x3e\x74\x8e\xdc\xdf\xe3\x4e\x46\x6f\x48\x0c\x41\xf0\xf9\x07\x6d\xee\x9b\x53\x43\xaf\x57\xdb\x5b\x41\xaa\x6f\xad\xf5\x5d\xae\x86\x11\x27\xda\x30\x0a\x13\x49\x42\xb8\x20\xdc\x56\x20\xca\x16\x2e\x4b\xb6\x4a\x94\x6b\x5c\xff\xdf\x3b\xc2\x5a\x7f\x18\x4c\x2e\xea\x86\x4e\x65\x5b\xd1\xa9\x64\x26\x56\xd7\x3d\xdf\x2f\x08\x59\x3a\xa9\xdb\xdc\xf5\x6b\xf0\x26\x48\x16\x29\xef\x9f\xfe\x76\x1c\x03\xdb\x1c\xdb\xb9\x7f\xf2\xd3\x4a\xd7\x68\x91\x2c\xeb\x78\xbc\x25\xa1\x79\x21\x0d\x50\x16\x34\x30\x46\xb1\x45\x62\x0a\x19\x9e\xed\xe0\x7c\x60\x21\xc7\xaf\x86\x45\x28\x13\x73\x94\xfd\xff\x55\x23\x95\x22\xd4\x19\x12\xc0\xd5\xdd\x36\xbd\x17\x59\x3c\xed\x84\xf2\xa8\xc8\xdb\xac\xed\x74\x39\x44\xb4\x0f\x5b\x99\x2f\xa4\x2f\x6f\xef\x11\x72\x2e\x72\x3e\x1d\xdc\x04\x10\x11\x41\x56\x18\x02\xb5\x76\x5b\x32\x4a\x0c\xe6\x80\x69\xd6\xf9\x0e\x8b\xa9\x9a\x6b\x4a\x73\x57\x8e\x93\xaa\xd0\xf6\x78\xa5\xd4\x91\xc3\xd6\x34\x6f\xfe\x2d\x99\x80\xdb\xb7\x6f\x0f\xe1\xf6\xed\xcf\x47\x6f\x0f\xd3\x1d\x14\xd8\xbb\x3b\xa7\x3b\x55\x48\x0c\x02\x67\xda\xa0\x40\xe5\x52\x57\x98\xf6\x3a\x60\x6c\x4d\x6d\x60\x95\xa5\xc6\xc1\xe4\x62\x92\xc1\x5e\x1f\x54\xd9\x82\xb4\x1a\xbe\xc4\x18\x45\xa8\xff\x48\x8b\x8c\x00\xd5\x03\xa3\x38\x93\x1c\x53\x9d\x6f\xd6\x1b\x60\xb6\xb9\x63\x1a\x04\x62\x88\xe1\xaf\xbf\xee\xd9\x73\xc9\x2a\x5b\x9a\x75\x53\x89\x3e\x50\x22\x0b\x83\x06\xd3\xe7\xa6\x4b\x77\x3a\xa0\xae\x2c\x2b\x42\x30\xdd\xd9\x52\xaa\x47\xa2\xc2\x2d\xfb\xb9\xb3\x47\x5a\xe1\x6c\x99\xb7\x2f\x47\x1f\x07\x5f\x26\xf3\xd1\x30\x98\x0f\x66\x9f\x66\xd3\x76\x53\x98\x17\x70\x77\x70\x72\x4c\x3d\x99\x16\xd9\xca\xde\x04\x81\xf5\xd1\xae\x80\x57\x1b\xbf\xa4\xef\x1e\x33\x7e\x46\xc2\xcd\x7a\xb8\x46\x7a\xef\x5e\x27\x1e\x08\x0f\xd2\x33\xe6\x43\xb7\x53\x07\x4d\x89\x59\xfb\x70\xdc\x30\x51\x51\xbb\x3e\x3f\x4f\x4f\xf0\x96\xf9\x69\x05\xb2\x99\xaf\x15\xea\xb5\xe4\xe1\x50\x26\xc2\xf8\xd0\xab\x27\x9c\xcc\x0a\xf3\xd9\xa7\x4f\xb3\xe9\xbe\xc4\x93\xda\xf3\x2c\xd7\xfc\x8a\x18\xba\xce\xa3\xd5\x89\x33\x26\x1e\xca\x10\xdd\x0b\x57\xa7\xd9\xe6\x19\xf1\x8b\x58\x3f\xaf\x5b\x39\x1a\xf6\x65\xb1\x10\x15\xae\x98\xed\x46\x6d\x80\x7d\x0d\x91\x93\xcd\x8b\xd9\xac\xb7\x55\x6c\x4f\xcd\x30\x1a\x06\x83\xc4\xc8\x80\x12\xce\xc4\xaa\xb9\xb8\x29\x01\x2a\x1f\xcf\x45\xc3\xf5\x74\xf8\x1f\x29\x70\x1c\xa2\xb0\xe7\x04\xd5\xbe\x34\x3a\x71\x4f\x2e\x95\xeb\x2a\xf3\x94\x83\x0f\xd3\x96\x18\x55\xfe\xf4\xa2\xf3\x85\x57\x4c\xb8\xf7\xa0\xed\x8b\x4f\xf1\x44\x94\xad\xcd\x3e\xdb\xdb\x03\x5a\x7d\xb9\xca\xcf\x5c\x95\x9c\xa2\x87\x36\x95\x31\x29\xa6\x92\x33\xba\xc9\x37\x95\x37\x75\x01\x5b\x09\xc2\x8b\x50\xc8\x22\xd2\x87\xe9\xbc\x7b\x7a\xe5\xc8\x5f\xe2\x90\x18\xac\x2e\x2f\x99\x6e\x86\x31\x77\xf7\x58\x8a\x2b\x58\xdd\x30\xce\xd3\x49\xbb\x33\xa3\x12\x6c\x7f\x9f\x2a\xa1\xa8\xef\x4b\xdd\xe3\xf7\x29\x0c\x32\xbe\x0d\x65\x98\xbd\x87\xb2\xa6\xa2\xe5\x1e\x53\x76\x7c\xf9\x7c\xa8\x35\x84\xc6\x9e\x68\x1b\x47\x64\x85\x2e\xbc\x3f\x32\x11\x8e\xc5\x15\x89\xe1\xb6\xfa\x2a\x92\x5d\x5a\x6d\x27\x26\xa5\xb7\x0f\xd3\xd6\xfd\xee\x55\x37\xfa\x6e\x55\x58\x9d\xad\x5d\xf7\xb9\x66\xe5\x17\xc3\x4c\x85\x32\x6d\x5b\x5b\x92\x28\x27\x4f\x95\x5c\x32\x8e\x45\x92\xef\xed\xcc\xe4\x6b\xf2\x57\xef\x0c\x98\x7d\xe6\xb3\x5f\x34\xaa\x4b\x62\x48\x11\x5b\x1f\x85\xef\x5f\x10\x8d\xef\x4e\xb2\x3c\xf8\xdf\xed\x14\xc0\xc1\x9b\xe3\x05\x13\xc7\x0b\xa2\xd7\xe0\x3d\x61\x69\x06\xe9\x5a\x5a\x37\x7f\x1d\x4e\xbe\x04\xf3\xd1\xec\xc3\x4f\x7f\x17\x4e\xff\x07\x7e\xf9\x05\x8e\xd1\xd0\x63\xa4\xda\xfd\x06\x43\x9d\xbf\x4a\xeb\x37\x49\x94\x3e\x8d\x71\x0e\xde\x06\xc8\xa3\xf6\xe8\x52\x78\x0b\x29\x8d\xcd\x66\x71\x09\x7a\x2c\x63\x73\x4c\x1e\xb5\x53\xc5\x82\xb4\x3b\x69\xe0\x21\xfc\xf4\x6b\xfe\xd3\x09\xd4\x32\x36\x78\x9e\xca\x8e\x66\x53\x42\x73\xd3\xd6\xe1\xf9\xca\xd4\xfd\xff\xb8\x76\x76\x34\xec\xd9\xaa\xa1\x16\x89\xe3\xc1\x95\xef\xdb\x99\x3d\x21\x37\xd0\x3a\x89\x5c\xc1\x91\x1e\xf2\x4b\x49\x93\x08\x85\x29\xcc\x1d\x18\x62\xb0\x4a\xf2\x60\xb4\x5c\x22\x35\x7e\xfa\xda\x5b\xda\xf9\x54\x31\x41\x59\x5c\xce\x2a\x69\x48\xba\xba\xc6\x87\x5b\xa4\xbd\x23\x12\x91\xbf\xa4\x20\x8f\xd6\xc8\xd1\x5d\x09\x98\x16\x1d\x3e\xdc\xb6\xb5\xd1\x7e\xa1\x5a\x3b\x07\x55\x2f\x5b\xa7\x31\x2b\xdf\x30\xe9\x1e\x4a\x57\xa4\xfb\x49\x2a\x15\xbe\xef\x82\xcc\xf8\x34\xec\xbc\x71\xef\xcf\xed\xbe\xbc\x03\xa4\xda\x77\xe9\x17\xb3\x10\x6b\x1f\x82\x23\x5e\x66\x17\x20\xaa\x5a\x22\xd9\x42\x98\xa6\xf2\x01\xd5\x54\x72\x3e\x12\x61\x2c\x99\x30\xed\xc3\x8a\x20\x48\x91\x16\x91\xaf\x9a\xbd\xc4\x36\x30\x44\x99\x39\x72\x8c\xd0\xa8\x4d\x80\x5a\xbb\xec\xd1\xc4\x37\x48\x16\x11\x33\x3f\xdb\x95\x5c\xae\xf2\x9d\x4c\xe4\x2a\x30\x0a\x49\xb4\xa5\x4f\x13\x33\x91\xab\xd1\x03\x0a\xa3\xdb\x77\x15\x4e\xf9\x2d\xe3\x43\xfb\xe7\xfc\x51\xac\x96\x03\x9a\xe3\x75\x07\xb4\x27\x74\xab\xc1\x60\xe3\x44\xfb\x70\xbb\xcd\x36\x59\xe0\xb4\xfe\x70\x3f\x69\xba\x55\x48\x35\x2d\x27\xf9\xac\xbc\xd8\x56\xa1\xb9\xa7\xdc\xe4\xe8\x29\x76\xa5\x53\xb5\xee\xb2\xd0\x6a\x1c\xa5\x7c\xf9\x22\x14\x5a\x6c\x7f\xbc\xab\xbd\x1e\x0e\x26\x17\x70\xf9\x7b\x00\x5f\x66\x93\x8a\xe8\xb4\x27\x69\xb7\x0f\xe1\xf6\xcd\x27\x34\x03\x63\xe0\xd6\xd5\xc3\x87\x16\x9e\x76\x25\x77\x15\x7d\xa0\x5e\x08\x96\xe5\x7b\x4d\x71\xee\x00\x6b\xa9\x0d\x86\x7f\x49\x81\x2c\x6c\xd0\xf2\x4f\x99\xa8\xad\x9a\x9f\x1d\x16\x6c\xed\x03\xd9\x2f\x7d\xaf\xd0\x78\x48\x84\x14\x8c\x12\x9e\x2e\x77\x95\xd3\xe5\x6b\xf5\x2f\xab\xb7\x7f\x13\x44\x89\x06\xdd\xdd\xa3\xc1\x22\x7f\x34\x20\x4a\x34\xba\x37\x6f\x32\x5e\xd2\x84\x28\xd1\xa8\x00\xe1\x0b\x5e\xe9\xf6\x2a\x3a\x0c\xe2\x98\x33\x4a\x98\x91\x62\xe7\x11\x83\x97\x3b\xbe\xb2\x52\xa5\xf6\xf1\x25\xc5\x4a\xb2\xeb\xba\xfd\x2f\x00\x00\xff\xff\xab\x3a\x26\x83\x77\x20\x00\x00")

func iasCloudformationEcsYmlBytes() ([]byte, error) {
	return bindataRead(
		_iasCloudformationEcsYml,
		"ias/cloudformation/ecs.yml",
	)
}

func iasCloudformationEcsYml() (*asset, error) {
	bytes, err := iasCloudformationEcsYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ias/cloudformation/ecs.yml", size: 8311, mode: os.FileMode(420), modTime: time.Unix(1519595089, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xa7, 0x86, 0xf3, 0xc2, 0xaf, 0xd4, 0x24, 0x15, 0x20, 0xa4, 0xd5, 0x7e, 0x47, 0xfc, 0x84, 0x2e, 0x46, 0x96, 0x92, 0x30, 0xaa, 0x85, 0x2c, 0xea, 0x6c, 0x63, 0x60, 0x6e, 0xc2, 0xbc, 0x4e, 0xdf}}
	return a, nil
}

var _iasCloudformationVpcYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xdc\x59\x5f\x73\xda\x38\x10\x7f\xe7\x53\x6c\xc9\x43\x5f\x20\xc1\x76\x9b\xb9\xf8\x8d\x3f\x69\x8f\xbb\x23\xf1\x00\x07\x33\xcd\x74\x3a\xc2\xde\x10\x4d\x1c\xd9\x23\xcb\x4d\xf9\xf6\x37\x96\x8d\x84\x89\xa0\x36\xbd\xc0\xa4\xe4\x29\x2b\xed\xea\xb7\xfb\x5b\x56\xab\xa5\x3b\x9f\x4c\xf1\x29\x0e\x89\xc0\x4f\x11\x7f\x22\x62\x86\x3c\xa1\x11\x73\xe1\xbd\xdd\xb1\x3a\xed\xce\x55\xbb\x73\xf5\xbe\xd1\x00\x38\x83\x31\x2e\x69\xc4\x48\x08\x23\x12\x37\x46\x24\x8e\x29\x5b\x26\x6e\x03\x8a\x85\x11\x89\xb3\x7f\x00\xd2\xa4\x8d\x24\x11\x6d\x2b\xff\x17\xa0\xfb\xc5\x72\xb5\x94\x28\xa9\xbd\x21\x5d\x28\xa9\xb3\x21\xf5\xd7\x06\x9f\xd1\x64\x30\x97\x6e\x1b\xcc\xa5\xdb\x06\x73\x69\xd9\xa0\x6d\x34\x68\x1b\x0d\xda\x46\x83\xb6\xdf\x68\x78\x84\x93\x27\x14\xc8\x65\x30\xa6\xc8\x08\x13\xb9\xe1\xe9\x2a\x46\x17\x26\x82\x53\xb6\x94\x82\x01\xde\x93\x34\x14\x2e\x0c\xae\x67\x85\x20\xf1\x39\x8d\x85\x0c\x79\xae\x0a\x8c\x3c\x61\x03\xa0\x4f\x03\xde\x0b\x23\xff\xf1\x67\xb6\xac\x2b\xfb\xdc\xba\xfc\xe3\xbc\x73\xde\xb9\xb0\x2e\x33\xaa\xe6\x13\xf0\x69\xc0\x93\x06\xc0\x7c\x32\xb9\xb1\x32\x53\x55\xad\x7c\x38\xef\x5c\xd8\x1f\x0a\x4d\xbb\x8e\xe6\xc7\x4d\x4d\xa7\x8e\xe6\xe5\x5a\xf3\xac\xeb\x79\x0a\x7a\xd7\xf3\x6a\x62\xb7\x14\x78\xa9\x5b\x0b\xbd\xf5\xb1\xa4\x5b\x0b\xbf\xa5\x1d\x18\xf4\x14\xfe\x41\xaf\x26\x7c\x47\xc1\xcf\x54\x6b\xa1\x77\x0a\xf4\x8d\x31\x26\x51\xca\x7d\x94\xb9\x38\xf3\xfa\x9b\x06\xba\xf3\x89\xeb\x5e\xf7\x6d\xd7\x9d\x79\x7d\x29\xf7\x78\x14\x23\x17\x34\xdf\x9e\x7d\xae\x19\x59\x84\x38\x60\xc9\x9f\x51\x22\xb2\x4c\x4c\x5c\x10\x3c\xc5\x62\x79\x2b\x29\xb3\xcf\x18\xef\x5d\x2d\x2f\xc4\x53\xb2\x54\x26\xdb\xf0\x37\xae\x5c\xb8\xc9\xd3\x3a\xff\xcc\x48\x98\xa2\xb6\x01\xd0\x1c\x75\x87\x37\xcd\x2c\x82\x67\xb2\xd8\x4c\xd2\x05\x43\x01\x3c\x4a\x05\x02\x49\x92\xc8\xa7\x24\xfb\x96\x24\x79\x2d\x9a\x4f\xf2\xa5\x22\xc5\xe5\x66\x6b\x9c\x49\xa6\x19\xfe\xae\x56\x30\x07\x20\xd7\x30\x2a\xec\x08\x4c\xae\x31\x0c\xb6\x1c\x57\x87\x17\x62\x6d\x72\x18\xb8\x50\xde\xeb\xa5\x8b\x90\xfa\x7a\xc7\x06\x76\xfb\x94\xd8\xed\x5f\xc3\xee\x9c\x12\xbb\x73\x18\xf6\x33\xe8\xc6\xb1\x4e\xa1\xec\x2b\x7f\xba\x1c\xd2\xa7\x57\x71\x86\xd3\xef\x44\x60\xc9\x1b\x65\xe0\x24\x69\xa4\x4f\xff\x55\xf8\x27\xc9\x24\x7d\xfa\x81\xf0\xcf\x60\xd0\xd3\xa9\x34\xe8\x9d\x30\x93\xd4\xe1\x07\xba\xb2\xd6\x3f\x49\x1e\xa9\xc3\x0f\xe5\x21\xbf\x39\xe6\xb8\x80\x29\x45\x5e\x1c\x93\xac\x57\x54\xa5\xde\xe7\xc6\x0e\xc4\xb3\xd8\x7f\x89\x61\x7d\x89\xee\xbe\x15\x55\xf3\xb5\x6e\x1d\xbf\x13\x1a\x92\x05\x0d\xa9\x58\x7d\x89\xd8\xc6\x05\xf8\xee\x13\x65\xc1\x30\xeb\xa1\xe1\x4e\xf7\xd3\x2d\x78\x37\xc6\x7b\x68\x4a\x94\xb9\xb4\xd9\xca\x9a\x55\xf8\x5a\x68\x8e\x48\x9c\x57\xb7\x61\x7c\xcb\xfe\x21\x29\xf3\x1f\x4a\xf7\xb5\xe1\x1e\xce\xbb\xcc\xdd\x37\xb1\x44\x5e\xda\x54\xe9\x02\x7f\xf7\x57\x44\x19\xdc\x41\xb3\xd9\x82\xbb\xa6\xf4\xbc\xd9\xda\x34\x06\x5f\x25\x6a\x75\xe9\x1c\x97\x06\xfb\x15\x68\xb0\xdf\x04\x0d\xf6\x5e\x1a\x9c\xe3\xd2\xe0\xbc\x02\x0d\xce\x9b\xa0\xc1\x31\xd2\x50\xd4\xac\x6e\x1c\x87\xd4\x97\x35\xd3\x58\xbb\x74\x87\x70\x3c\xba\xf4\xf3\xeb\xd5\xaa\xd7\xa9\xf8\xc8\x5d\x33\x12\xa2\x9b\x99\x23\x47\xfa\x75\x0b\xd4\x49\x23\x6d\xae\x40\xba\xef\x3a\x72\xa4\x5f\xb7\x06\x9d\x34\xd2\x7b\x8b\xcc\x80\x08\xb2\x20\x09\xae\xdf\xd6\x01\xde\x53\x46\xf3\x47\x75\xb1\x49\xf5\x8f\xc7\xa3\x44\x4d\x49\x7e\xbb\x2a\x23\x3d\x33\x12\xa2\x3a\xdd\xe3\x86\xf9\xf7\x2c\x31\xd2\xb3\x7d\x79\x3f\x64\x02\x79\x96\xf0\x9f\x89\xc0\x39\x59\x49\x61\x3f\x62\x81\xcc\x7d\x12\xba\x00\xb7\x2c\x5c\x81\xcf\x91\x08\x04\x7a\x9f\x85\x13\x82\x08\x13\xf6\x5e\x00\x09\x39\x92\x60\x05\xf8\x83\x26\x42\xaa\x4e\x1f\x10\xc2\x68\x49\x7d\xa0\x09\x10\x08\xa9\x10\x21\xc2\x82\xf8\x8f\xcf\x84\x07\x49\x0b\xfc\x28\x0d\x03\x58\x20\x70\x7c\x8e\xf8\x23\x06\x6b\x2c\x6b\x24\x19\x90\x67\xb2\x32\xb3\xbf\xb5\x69\x47\x1a\xd4\x1e\xb0\x95\x83\x36\xfc\xdc\x6c\x15\x33\xb7\x22\x58\x35\x68\xd3\xb3\x3a\x20\x42\x10\xff\x01\xc4\x03\xc2\x52\xe1\xed\x4a\xe1\x5e\x27\x67\x5e\xbf\x58\xcf\x37\x3f\x21\xdb\x9f\xf0\xbb\xf2\x7d\x2b\x5a\x2f\x76\xbe\x8c\xe6\x8b\xa7\xa3\x19\x61\xe9\x69\x59\x1f\x57\x35\x7e\x60\x34\xf8\xe6\xcd\xa6\xdf\xc6\xb7\xff\x4e\xaf\x0f\x24\xe1\xc0\x0c\x18\x4f\x7b\xdb\x29\xb0\x3d\x27\x3b\x61\x60\x76\xc2\xf6\xc6\xd3\xff\x23\x73\x37\x5c\xdd\xe3\xa5\x5c\x19\x60\x8c\x2c\x48\x6e\x99\x5b\x4e\xec\x1d\xde\x97\xa6\x16\xe5\x20\x18\xe6\x90\xf9\x01\x89\xa0\x4c\x36\xff\xba\x7a\x43\xe7\x5c\xfe\x5d\x74\x8a\x5d\x55\x13\xbc\x71\x9b\x8a\x38\x15\xe5\xf9\x7f\xe9\x67\xa6\xac\xba\x0d\x83\xc6\x46\x16\xca\xd2\xbe\xa6\xe8\xfa\x47\x1c\x71\xb1\x3e\x25\xe3\xc6\xd5\x1c\xb4\x25\x09\x33\xaf\xbf\xf7\x5e\xb3\x0c\xa7\xaa\x35\xd3\xd9\xe5\xb9\x55\x05\x04\x4a\xe1\x4d\xe0\xb0\xf7\xe0\xb0\x77\x82\xb0\xeb\x82\xf8\x49\x9f\x6d\x8a\x86\x5e\x34\x85\x63\x6b\x30\x5d\x01\x8a\xd6\xa8\xf4\xba\x32\x63\xb1\xf7\x62\xa9\x1c\x16\xad\x51\xe9\xfd\x61\xc6\xe2\xec\xc5\xe2\xd4\xc6\x62\xee\xd0\xb7\x66\x93\x25\x28\x6a\xcd\x84\xa4\xfc\xf3\x53\x05\x20\x4a\xa1\xca\x70\xce\x88\xc3\xc8\x4e\xf9\xa7\xa4\x1a\x38\x2a\x4d\xa7\x8c\x38\x8c\xcc\x94\x7f\x16\xaa\x81\xc3\xc0\xcb\x7f\x01\x00\x00\xff\xff\x0a\xce\x71\x7d\x1c\x21\x00\x00")

func iasCloudformationVpcYmlBytes() ([]byte, error) {
	return bindataRead(
		_iasCloudformationVpcYml,
		"ias/cloudformation/vpc.yml",
	)
}

func iasCloudformationVpcYml() (*asset, error) {
	bytes, err := iasCloudformationVpcYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ias/cloudformation/vpc.yml", size: 8476, mode: os.FileMode(420), modTime: time.Unix(1519946704, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xeb, 0x11, 0xf2, 0x54, 0x91, 0x95, 0xf5, 0x0, 0xe, 0x1, 0xf8, 0x6e, 0xcc, 0x70, 0x66, 0xb1, 0x48, 0x33, 0x8e, 0xd8, 0xe2, 0x5d, 0x98, 0xd6, 0xae, 0xb4, 0xb4, 0x19, 0x2a, 0xba, 0x43, 0x4a}}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetString returns the asset contents as a string (instead of a []byte).
func AssetString(name string) (string, error) {
	data, err := Asset(name)
	return string(data), err
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// MustAssetString is like AssetString but panics when Asset would return an
// error. It simplifies safe initialization of global variables.
func MustAssetString(name string) string {
	return string(MustAsset(name))
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetDigest returns the digest of the file with the given name. It returns an
// error if the asset could not be found or the digest could not be loaded.
func AssetDigest(name string) ([sha256.Size]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s can't read by error: %v", name, err)
		}
		return a.digest, nil
	}
	return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s not found", name)
}

// Digests returns a map of all known files and their checksums.
func Digests() (map[string][sha256.Size]byte, error) {
	mp := make(map[string][sha256.Size]byte, len(_bindata))
	for name := range _bindata {
		a, err := _bindata[name]()
		if err != nil {
			return nil, err
		}
		mp[name] = a.digest
	}
	return mp, nil
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"ias/cloudformation/containertemplate.yml": iasCloudformationContainertemplateYml,

	"ias/cloudformation/ecs.yml": iasCloudformationEcsYml,

	"ias/cloudformation/vpc.yml": iasCloudformationVpcYml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"},
// AssetDir("data/img") would return []string{"a.png", "b.png"},
// AssetDir("foo.txt") and AssetDir("notexist") would return an error, and
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		canonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(canonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"ias": &bintree{nil, map[string]*bintree{
		"cloudformation": &bintree{nil, map[string]*bintree{
			"containertemplate.yml": &bintree{iasCloudformationContainertemplateYml, map[string]*bintree{}},
			"ecs.yml":               &bintree{iasCloudformationEcsYml, map[string]*bintree{}},
			"vpc.yml":               &bintree{iasCloudformationVpcYml, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory.
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively.
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(canonicalName, "/")...)...)
}
