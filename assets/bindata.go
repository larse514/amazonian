// Code generated by go-bindata. DO NOT EDIT.
// sources:
// ias/cloudformation/containertemplate.yml
// ias/cloudformation/ecs.yml
// ias/cloudformation/vpc.yml

package assets

import (
	"bytes"
	"compress/gzip"
	"crypto/sha256"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes  []byte
	info   os.FileInfo
	digest [sha256.Size]byte
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _iasCloudformationContainertemplateYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x59\x6b\x6f\x1b\x37\xd6\xfe\x3e\xbf\xe2\xd4\x29\x20\xa0\xd0\xd8\xb2\x13\xc7\x0e\x01\xe3\xc5\x58\x72\x5c\xbd\x95\x6d\xad\xc6\xb9\xb4\x41\x10\x50\x9c\x23\x89\xeb\x11\x39\x20\x39\x76\xd4\xa2\xff\x7d\x41\x72\x2e\x1c\x4b\x4e\xbc\x2d\x76\xb1\xfa\x10\x78\xc8\xc3\x73\xe3\x73\x6e\xcc\x8b\x52\xd3\x25\x92\xe8\x05\x7d\xd0\xc0\x72\x59\x66\x0b\xa9\xd6\xd4\x70\x29\xa0\xa0\xec\x8e\x2e\x11\xe2\xd8\xe0\xba\xc8\xa9\xc1\x78\xc1\x73\x04\xba\xa6\xbf\x4b\xc1\xa9\x30\x28\xa8\x30\xfb\x9b\x75\x0e\x71\x2c\x4b\x53\x94\xe6\xdb\xa4\x15\x51\x75\x42\xbf\x8c\xe7\x25\xbb\x43\x03\x8c\x2b\x96\x23\xe3\xfb\x19\x16\xb9\xdc\xd0\x79\x8e\x7a\xa7\x4a\x7e\xff\x7b\x1a\x75\xc5\x30\x5a\xd0\x39\xcf\xb9\xe1\xa8\x61\x98\x4c\x93\xf3\xf1\x64\x7c\xfb\xeb\x97\x71\x72\x65\x95\x30\x94\xdd\xc5\x82\xae\x03\x2e\x31\x32\x1d\x6b\x2e\x96\xb9\x35\xbe\xa0\x8a\xae\xd1\xa0\x8a\xe5\x3d\x2a\xc5\x33\xd4\xf0\xbe\x60\xe3\xec\xec\xbe\x60\x31\x3b\xa1\xf4\xe4\x64\x8e\x80\x4c\xb3\xbc\xd4\x06\xd5\xd9\x2e\x46\xf1\xc5\x30\x1d\xfa\xfd\xf8\xf0\xf2\xe6\x74\x9a\x5e\xde\x0c\xdf\x5d\xbd\xfd\xd5\x1e\xcc\xe7\x54\x89\x33\xaa\x04\xa1\x0f\x9a\x60\x4e\xb5\xe1\x2c\x97\x34\x9b\xd3\x9c\x0a\xc6\xc5\x92\x94\x3a\x46\xaa\x4d\x7c\x48\x5e\x1d\x9e\xbc\x3e\x3c\x7e\x35\x78\xf3\xe6\xe4\x15\x31\x54\x2d\xd1\x2c\x95\x2c\x8b\x83\x8b\x61\x7a\x9b\xcc\x2e\x67\xd3\x83\xc1\x29\x9e\x9e\x0c\x5e\x1f\xb3\xd7\x47\x38\x78\x73\x4c\xbd\x8c\x4c\x68\x6b\xe7\xd9\xc5\x30\x9d\x9c\xc7\x6f\x5e\x1e\x9e\x9e\x0e\x4e\xde\x0c\xf6\x1b\xd6\xfb\x98\xcf\xf7\xbd\xf2\xf4\x41\xef\x33\xb9\x06\x9a\xcf\x73\xae\x0d\x0a\x54\x67\xf7\x34\x2f\xd1\xb3\x5a\x49\x6d\x30\xfb\x5d\x0a\xe4\xd9\xd9\x6f\x2f\x8f\xd3\x8f\xa3\x9b\xdb\xd9\x3f\x4e\x3e\x9e\xfc\x02\x3f\xbb\xbd\xdf\xa4\xc0\x6b\x2b\xed\x5e\xeb\x0c\xef\x31\x97\xc5\x1a\x85\xb1\x4c\xf7\x61\x24\xd9\x1d\xaa\x19\xea\x42\x6a\x6e\xa4\xda\x9c\xdd\xa3\x12\x52\x68\xb9\x30\x0f\x54\xa1\x96\x79\x69\xef\x5b\x1f\x34\xae\xf4\x5e\xe4\x42\x1b\x2a\x18\x42\x8a\xea\x9e\x33\x2f\x61\xae\x68\x96\x53\xa5\x51\x44\xd1\x8b\xf0\x4e\xa2\x17\xba\x9c\x0b\x34\xf1\xfc\xf5\x61\x76\x7a\xb8\xc0\x7e\xf5\x3d\x38\x1a\x1c\x65\xec\xf8\x34\x4a\x3e\xa4\xb7\x15\x92\xde\x3a\x90\xbd\x47\xa5\xb9\x14\x04\x7a\x47\x83\xc3\x41\x3c\x78\x13\x0f\xde\xf4\xa2\x69\x0d\x01\x4d\x22\x08\x65\xdb\x4f\x80\xdb\x4d\x81\x04\x52\xa3\xb8\x58\xba\x85\x11\x6a\xa6\x78\x61\x1c\x27\x4b\x07\x72\x01\x4c\x0a\x43\xb9\x40\x15\x01\x0c\xeb\xbf\xff\x0e\x13\x07\xc2\xf0\x70\xf2\x21\x25\xe4\x62\x78\x44\xc8\xfb\xe9\x90\x90\x71\xb6\xcd\x27\xc5\x1c\x99\x01\x0a\xef\xa7\x43\x30\x2b\x6a\x80\xe6\xb9\x7c\xd0\x50\x7b\x56\x03\x65\x0c\xb5\x06\x23\xc1\xac\x10\xc6\xc2\xa0\x12\x68\xf6\x23\x80\xa9\xe2\x52\x71\xb3\x09\x65\x5e\x97\xeb\xb9\xd3\xe6\x91\xa0\x64\x72\x0e\xaa\xcc\x11\x8a\xea\x10\x88\x9a\x72\x2a\x95\xb9\xa2\x45\x61\x61\xfd\x0c\x4e\x96\x1c\x4a\x8d\x19\xcc\x37\xad\xfd\x10\xc1\x23\xa4\x3d\xc7\x8d\xd5\x11\xb0\xc8\x05\x1b\x0c\x11\x6c\x03\xfa\x39\x8c\x2e\x7c\x8c\xc2\x44\xd2\x0c\xce\x5d\x94\xa2\x82\x21\x15\x52\x70\xc1\x68\x5e\x0b\xb2\xca\x81\xbb\x88\x30\x04\xff\xba\x84\xd1\x75\xea\xb0\x50\x33\xb4\x39\xe3\x2f\x33\x4b\x66\xd7\x9e\x4f\x95\xb8\x9e\xc5\x69\x98\x42\x95\xc7\x22\x08\xd3\xc3\x73\x0e\x5b\x50\xd4\xf4\x40\x95\x88\x00\xf8\xda\xd5\x9f\xef\x9f\xf5\x39\xc3\xd3\x83\xc2\x3a\x73\x44\xd1\x0c\xb5\x2c\x15\x43\x4d\xa2\x08\xe0\x05\xcc\x90\x49\x95\x41\x8a\x06\x16\x52\xb5\x59\xbd\x81\x78\x1b\xc2\xa3\xeb\xd4\x8b\xee\x44\xd0\x4c\x96\x06\x8f\x5f\x12\xe2\x39\xa5\x68\x2e\x6d\x7e\xad\x08\xa7\x4a\x16\xa8\x6c\x31\xa9\x8f\x6e\x01\x11\x7e\xf8\x7f\xc9\x05\x7c\xda\xdb\xdf\xeb\xc3\x27\xf8\x61\x86\x8b\x47\x24\xd0\x87\xbd\xbd\xcf\x9f\x1b\x06\x43\xb9\xb6\xd9\x91\x78\xbc\xd0\x02\xbf\x02\xcd\x39\xd5\xe0\xf3\x3b\x66\x36\x1c\x2f\xb9\xc9\xe9\x7c\xbf\x39\xd4\xa8\x17\x68\x12\x43\x1b\x0a\xf5\x6f\x87\x36\x41\x0a\x83\xfe\x2e\x05\x03\xdd\x1a\xdf\x04\x2b\x89\x55\xee\xd6\xe9\xd6\x95\xd5\x72\x19\x67\xc4\x33\xde\x8a\xaf\xce\x81\xd1\x75\x5a\xf9\xac\xa1\xad\x82\xc4\xdd\xa6\x91\x99\x8c\x41\xe1\x5a\xde\x23\x98\x15\xd7\xff\x17\x01\xb8\x02\x36\xa9\x70\x34\x2b\x73\xdc\x4e\x82\x1e\xef\x16\xee\xe7\x75\x09\x7d\x7f\x44\x48\x78\x28\xda\x7d\x9b\x09\x73\x95\xa7\xfe\x8c\x2b\xb6\x0b\xa9\x1e\xa8\x6a\x75\xf7\xc6\x3b\x60\x24\x4a\x54\xea\xf7\x9a\x12\xdc\x8b\xea\x8b\x15\x19\x7f\xc4\xf0\x2d\xc7\x3c\x23\x60\x5d\x12\xaf\x90\x66\x55\xd2\xb3\xbf\xf7\xb6\xc4\x76\xae\xf3\x6f\x5d\x5e\x6d\x6e\xa0\x61\x10\xb1\xbd\x06\xd1\x55\x5a\xf7\x24\xf5\xa7\x77\xb4\x37\xe7\xd9\x0e\x0e\xdc\xf2\x84\x7f\x7f\x46\x9a\x9b\xd5\x70\x85\xec\xce\xd5\x96\x7b\x9a\xa7\xc8\xa4\xc8\x34\x81\xc3\xc1\x36\xd1\x94\x9a\x15\x81\x83\x1d\x1b\x4a\x1a\xc9\x64\x4e\xe0\xe7\xdb\xdb\xe9\xf6\xfe\x2d\x5f\xa3\x2c\x4d\xc3\xfc\xb8\x43\xb2\xb9\x5d\x29\xd4\x2b\x99\x67\x43\x59\xda\xc8\x3b\xaa\xb6\x03\x34\x06\x8e\xae\x5d\x25\x95\x21\x70\x3a\x68\x73\xc1\xb6\x0a\x57\xd4\xb0\x55\x9d\x0f\x9d\x40\x63\x8a\xa1\xcc\xd0\x35\x15\x83\xda\xeb\xef\xc4\xea\xdb\x8a\x84\x08\x33\x46\xf1\x79\x69\x30\x40\xd1\x2f\xb8\x21\x90\xa1\xc2\x25\xd7\x46\xb9\xf6\xf8\x4b\x86\x39\xdd\xec\x1b\x6f\xf8\x17\xed\x2d\xef\x82\xcb\x29\x51\xeb\xe0\x3b\x88\x0a\x19\xee\xa3\x67\xa3\x4e\x7b\xbb\x77\xb4\x16\x29\x21\x95\x53\xaa\x04\x5d\xa0\xc8\xf4\x8d\x68\xd5\x6a\x33\xeb\x13\xf7\x5f\x15\x8f\x5a\x6a\x5b\x7d\x6a\xa5\x46\xa8\xb9\xc2\xda\x1b\xbd\xc3\x76\xdd\xf6\xfe\x36\x4d\x0e\xa5\x58\xf0\x65\xe9\x8d\x6e\xfd\x7c\x45\xbf\xf2\x75\xb9\x9e\xa2\x62\x2e\x97\x1e\x0d\x06\xed\x1e\x17\x76\xaf\xba\xfb\x86\xa4\x26\x68\x71\x5c\xf5\x78\xde\x98\x6e\x9b\xe6\x35\xee\xac\x05\x09\xbc\x5a\xf5\x08\xf1\x81\xd4\xf6\x39\xdf\x4e\x1b\x4d\x98\x55\x64\x33\x99\x63\x90\x51\x2a\x97\xda\xd5\x5e\x83\x0d\x7d\x37\xc2\x05\x17\xdc\x17\x47\x4f\x6b\xa8\xbe\xcb\x9a\x55\x77\x95\xdd\xa5\xdd\x37\xda\x65\xf6\xc4\xb5\xbd\xa5\x6b\x9e\x6f\x9a\xd2\xd6\xeb\xf5\xe1\x93\x97\xea\x18\xa5\x76\x8c\xb2\x1e\xe9\xf5\xc1\x4e\x3d\x4d\x0a\x6a\x1c\xd3\x4a\x68\x1d\xdc\xb8\xe5\xbb\xfe\x1d\xbb\x36\xc1\x53\xb8\x16\xa0\xf5\x7c\x51\x12\xd8\x3b\x1e\xec\x35\x2b\x81\xdf\x75\x58\x9d\xe2\x4e\xe1\xf9\xce\x8d\x41\x0b\x1d\x5c\x4b\xb5\x71\x32\x02\x21\x17\x5a\xa3\x30\x9c\xe6\x04\xf6\x8c\x2a\x71\x0f\xa0\x3d\x32\x91\xcb\x27\x30\xea\xf6\x46\x8a\xdf\xdb\x08\xa0\x0f\x3a\x97\x4b\x1d\x6c\xde\x14\x1d\x07\xf9\x5f\x45\x16\xbb\x29\xaf\xf6\x92\x9d\x8b\x1f\x6c\xa6\x99\xc8\xa5\x0e\xfb\x93\xee\x19\x9b\x1e\x5a\x80\xf8\xf6\xc6\x2d\x39\x74\x74\xc1\xb5\x85\x8e\x71\x72\x65\xbb\xa1\xa7\x4b\xa5\xd6\xe5\xda\x1d\x9d\xca\x9c\xb3\xcd\x48\xb2\xd2\xb5\x31\x8d\x2a\xa9\xa1\x06\xbb\x4b\x31\x5c\x2c\x16\xc8\x0c\x81\xc4\x4e\x1e\x81\xd6\x53\xc5\x05\xe3\x05\xcd\xbb\xe6\x57\x1a\x12\xf8\x84\x4c\x77\xc7\xd3\xb0\x49\xf1\x75\x9b\xc0\xa7\x9e\x36\x9a\xb4\xaa\xf5\x6a\xa2\x6e\x21\x71\x1a\xf3\x30\xa1\x7a\x1b\x3c\x12\xdd\xdc\x1e\x24\xba\xe6\xc4\x0e\x1b\x77\x5a\xf9\x2d\x3b\x43\x5d\x77\xce\xfa\xa3\x2a\xab\xa3\x1a\xd7\x53\xd9\x5b\x25\xd7\x61\x92\xea\xf5\xe1\x7b\x67\x7d\xaa\xd1\xbd\x7e\x47\x34\x3c\x79\xce\xf6\xda\x73\xfc\xe9\x49\xce\xb3\xc7\x3a\x7d\xe0\x66\xd5\xd5\xe9\x59\x92\x66\x8f\xf5\xb3\x45\xe0\xe8\x91\x02\xec\x88\x24\xa5\x59\x49\xc5\x7f\xc7\x14\x59\x69\x1b\x12\x87\xf2\xb1\x58\x2a\xd4\xba\xf7\xb9\x23\xab\x9e\x01\x08\xf4\x7e\x72\xc8\xae\x40\x93\x32\x9a\x73\xb1\x0c\x3b\xd5\x00\xdf\x49\x51\xe4\x9c\xb9\x08\x4d\x4a\x23\x2b\x62\x42\xec\x1f\x74\x9e\xa3\x3f\xf6\xa8\xd2\x41\x88\x8b\xed\x98\xb8\xa2\x5f\x87\xb4\xa0\xcc\xf5\x53\x75\x29\xbf\xe2\xa2\x5d\x3c\x8c\xba\x3a\xbb\x0a\x1c\x64\xd5\x8a\xff\x41\x7f\xbb\x42\xf6\xc1\xae\x5e\xa2\x49\x8c\x69\x08\xfb\xe0\x7b\xbe\xcf\x41\xf5\x48\x66\xd7\xa4\x25\xb4\xc6\x69\x6f\x9c\xdd\xec\x43\xa2\x44\x4d\x5d\xdb\x3a\xe2\x6b\x14\xfe\xe9\x03\x99\x26\x75\x0b\x10\x16\xe3\xa8\x13\x8f\x56\xa8\x2e\x28\xf3\xd1\xb2\xed\x73\x1f\x2e\xff\x96\xcf\x9b\x53\x4f\xf8\x36\x8c\xd0\x24\x35\x58\x04\xd4\xf5\x6e\x3d\x44\x62\x51\x71\x0c\xec\x6c\x90\xd0\x36\x3d\xbb\x70\x52\x17\xd9\x80\x89\xe7\xfd\x44\x4e\x4f\xb2\x7f\x96\xda\xd8\xf8\xf7\xc2\xab\xee\x62\xb8\xa2\x62\x89\xe3\xe6\xe6\x83\x5e\x41\xe6\x99\x7c\x10\x04\x5e\x07\x0d\x0a\x1a\xc5\x59\xb2\x5c\x2a\x5c\x3a\xfe\x95\xcf\xee\x51\x85\xd5\xce\xea\xd4\xca\xeb\x4c\x0a\x9e\x43\xdd\x53\x4f\xe4\x03\xaa\x73\x59\x8a\xac\xed\x72\x02\x3f\xb4\x3c\x7c\x9f\x14\x01\x3c\x42\xc9\xff\x7c\x35\xa0\x2d\x92\x62\xda\xea\xfe\x5f\xaa\x10\x55\x80\x84\x92\xff\xb3\x95\xe2\x09\x73\x89\xcb\x97\xac\x69\x07\x9a\x3c\x9a\xe4\x54\xad\xf5\xa3\xcd\x69\x69\x2a\xa0\xd9\xdd\x1d\x09\x9b\xe9\x86\x41\xe5\xe9\x2a\x41\x6b\xf2\xae\xc8\xa8\xa9\x57\xbf\x97\x7f\x93\xc9\xf9\xf1\x60\xa0\x9d\x18\x0b\x39\x7c\x57\x6c\x01\xca\xf5\x30\x1f\x9c\x5e\xc4\x11\x3e\x01\xac\x8b\x7b\x9a\x97\xce\xf0\x29\x2a\x2e\xed\x2c\xd7\x4e\x05\xd6\xa3\xdc\x16\x99\xc7\xb1\xd2\x8c\x55\x96\xba\x99\x78\x9c\x9c\xee\x9b\x94\x5d\x01\xbe\x00\x59\x2a\xf7\x40\xb5\xb4\xb3\x31\x35\xa8\xc1\x48\x09\x6b\x2a\x36\x6e\xba\x03\x6b\x4f\xfd\xf8\xe2\x15\x21\xd0\x7b\xdd\xe5\x5c\x3f\x1e\xd4\xbd\xf1\xae\x94\xd8\xb8\x2e\xc8\xa0\xc9\x87\xf4\x20\xc8\x8c\x17\x93\xf3\x7a\xe8\xa9\xd3\x72\x00\x43\x0f\xc0\xb6\x77\x7b\x3c\xe0\x79\xd1\x15\x40\xdb\x87\x88\x75\x41\x15\xd7\x52\xdc\x14\xd6\x3c\xa9\x08\x5c\x2a\xa4\xb6\x10\xaf\xa8\x68\xbc\x55\x57\x2c\x87\x12\x2f\xc9\x5a\x6f\xe7\xd7\x2f\x17\x93\xf3\x2f\xc7\x1f\x3f\x7e\xf1\xd5\x20\x82\x5d\x5d\xa8\x53\x33\xb8\x64\xbb\xe1\xfe\x6d\x7a\xd4\xad\x0b\xae\x37\x3b\x6f\x67\xbd\xd8\xd6\xc2\x8b\x61\x5a\xef\xf6\x61\xe7\xb8\x51\x97\xbd\x19\x1a\xdb\x8f\x4b\x31\x16\x23\xba\xd1\x04\x0e\x5f\x45\x37\xee\xbf\x81\x9c\x98\x77\xb3\x09\xa9\x0a\x79\xe7\x35\xdc\xf9\xc8\x59\x98\x5a\x9a\x28\x74\x63\x5a\xce\x61\x6f\x65\x4c\xa1\xc9\xc1\xc1\x8f\x7f\x04\x75\xef\xcf\xfd\x1f\xff\xe8\x3e\xb9\xfc\xe9\x27\x83\x8b\xaf\x85\x9d\x26\xba\x4f\x09\x8e\x4f\xf7\x7c\xfc\x6e\x36\xd9\xfb\x57\x00\x00\x00\xff\xff\xb3\x78\x88\x2e\x7c\x1b\x00\x00")

func iasCloudformationContainertemplateYmlBytes() ([]byte, error) {
	return bindataRead(
		_iasCloudformationContainertemplateYml,
		"ias/cloudformation/containertemplate.yml",
	)
}

func iasCloudformationContainertemplateYml() (*asset, error) {
	bytes, err := iasCloudformationContainertemplateYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ias/cloudformation/containertemplate.yml", size: 7036, mode: os.FileMode(420), modTime: time.Unix(1520120252, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xba, 0x83, 0x4c, 0x69, 0x9f, 0x1, 0x32, 0x4f, 0x95, 0xc4, 0xad, 0x82, 0xb5, 0xd4, 0x58, 0x80, 0x13, 0xf6, 0xaf, 0x3e, 0xb8, 0x53, 0xde, 0x4c, 0x95, 0xe9, 0x21, 0x24, 0x78, 0xb8, 0xd3, 0xb3}}
	return a, nil
}

var _iasCloudformationEcsYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x59\x7b\x6f\x1b\xb9\x11\xff\x5f\x9f\x62\x12\x1f\x20\x20\xf0\xda\x7a\xd8\x71\xbc\x68\xee\x20\xcb\x4a\xa2\x56\xce\x09\x5e\xd9\xc6\xd5\x30\x02\x8a\x3b\x92\xd8\x70\xc9\x2d\xc9\xb5\xad\xbb\xe6\xbb\x17\xe4\xbe\xa5\x95\x6d\xa4\x49\xcf\x38\x84\x3b\xfc\xcd\x83\x33\xc3\xe1\x90\xda\x4b\x34\x59\xa2\xdf\xda\x23\x0f\x1a\x28\x97\x49\xb8\x90\x2a\x22\x86\x49\x01\x31\xa1\x5f\xc9\x12\xc1\xf3\x0c\x46\x31\x27\x06\xbd\x05\xe3\xb8\x01\x3b\x44\xaa\x0f\xd6\x11\x07\xcf\x93\x89\x89\x13\xb3\x81\x46\xaa\xb3\x89\x0c\xa5\xfb\xde\x3c\xa1\x5f\xd1\x00\x65\x8a\x72\xa4\xec\x20\xc4\x98\xcb\x35\x99\x73\xd4\x8d\x96\xa4\xf3\x5b\x86\x6c\x89\xa6\x24\x26\x73\xc6\x99\x61\xa8\x61\x38\x98\x0e\xce\xc6\x93\xf1\xec\x8f\x2f\xe3\xc1\x85\x55\x6c\x08\xfd\xea\x09\x12\x21\x44\x52\x86\x1c\x3d\x2b\x40\x33\xb1\xe4\x76\x91\x31\x51\x24\x42\x83\xca\x93\xf7\xa8\x14\x0b\x51\xc3\x3f\x70\xfd\x99\x44\xf8\x3e\x4c\xa2\x68\xfd\xe5\x2b\xae\xbb\x70\x1d\xd3\x71\xf8\xfe\x3e\xa6\x1e\x3d\x21\xe4\xe4\x64\x8e\x10\x24\x73\x81\x66\x1c\xbe\xd7\x6e\xe0\xcd\xdf\x76\xc3\x77\xdd\x05\xee\x67\xdf\x9d\x5e\xa7\x17\xd2\xe3\x77\x30\x16\xda\x10\x41\x71\xb6\x8e\xf1\xbd\xe9\x1d\x44\x18\xb2\x24\x82\x73\x19\x11\x26\x9c\xa2\x56\x6b\xaf\x2a\xba\xb5\xf7\x8c\xc8\xd6\xe0\x26\x98\x65\x4e\xf9\xe0\xfc\x75\x8d\x4a\x33\x29\x7c\x68\xf7\x3a\xdd\x8e\xd7\x39\xf5\x3a\xa7\xed\xd6\x34\x5f\x9c\xf6\x5b\x50\x51\x68\xbf\x00\xac\x3d\x3e\x04\x46\x31\xb1\x74\x84\x73\xd4\x54\xb1\xd8\x38\x41\x29\x1a\x9c\xe3\x16\x52\x81\x55\x66\x63\xd3\x82\xdc\x3f\x2f\x91\x62\x71\x20\x17\x40\x04\xe0\x23\xd3\x86\x89\x25\x8c\x86\x3d\x2b\x62\x4a\x98\x02\x23\x01\x85\x4d\x01\x08\x82\x4f\x40\x28\x45\xad\x2d\xd1\xac\x10\x46\xc3\x00\x58\xe6\x3b\x7d\xd0\x82\x34\x08\x55\xad\x83\x9b\xc0\xf7\x47\xc3\x9e\xef\x5f\x4f\x87\xbe\x3f\x0e\xb7\x0d\x08\x90\x23\x35\x40\xe0\x7a\x3a\x04\xb3\x22\x06\x08\xe7\xf2\x41\x97\x92\x37\xb4\x8e\x85\x41\x25\xd0\x58\x85\x37\x41\x1e\xe4\xaa\xd6\x09\xd3\xe6\x6f\xa5\xea\x14\x62\xb5\xff\xba\x5b\xbd\x01\xf3\x20\x21\x0d\xa3\xd5\x0d\x6b\x99\x28\xd0\x6e\x16\x43\x6b\x9c\xd5\x37\xe4\x89\x36\xa8\xfe\xbf\x4a\xcf\x51\x33\x85\xe1\x90\xc4\x84\x32\xb3\xae\x2a\xfd\x9c\x44\x73\x54\x99\x82\x05\x49\xb8\xf1\xa1\xdd\x6d\x37\x84\xd9\x01\x6d\xa0\x4b\xb7\x1a\x09\x9c\x24\x82\xae\x0a\xcd\x36\xa0\x34\x5d\xa2\x55\x7c\x41\x1e\x03\xf6\x27\x7e\x97\xc2\x0b\xf2\xc8\xa2\x24\x02\xd1\xa4\xd8\x46\x99\x12\x01\x73\xcc\x2c\xc0\x70\x97\x0d\xd5\xbd\xe9\x6f\xab\xb1\xa9\x9a\x0b\x06\xb3\x8e\x71\x57\xca\x67\xb6\xda\xdd\xcd\xa8\x92\x8e\x3a\xb0\x89\x86\xe1\x35\xe1\x09\x6a\x1f\x6e\xf3\xc9\x7d\x0b\xd3\x11\xe1\xdc\x8d\xd2\x72\xe0\x86\x9c\xa8\x25\xee\x43\xd4\x2f\x88\x51\x3f\x23\x3a\x89\x60\xbf\x1f\x4b\x54\xaf\x18\x1f\x1d\x94\xa3\x0a\xb1\x0a\x38\xaa\x8c\xbb\x9d\xc7\x9a\x58\x5a\xf0\xd3\x92\x9f\x56\xf8\x69\x85\x9f\x1e\x1d\xbc\x2b\xc6\xfd\x83\x72\xb4\x21\xb3\x62\x1f\xed\x57\xd8\xfb\x25\xbb\x2a\xd8\x55\xb9\x30\x55\x61\x54\x25\x63\x26\x56\x55\xd8\x59\xef\xa0\x32\xec\x55\xc6\x47\x95\x71\x06\xbf\x73\x02\x86\x52\x68\xa3\x08\x13\xa6\x16\xe8\x29\x47\xa2\x11\xe8\x4a\x4a\x8d\x40\xe0\x9e\x70\x16\xd6\x43\x6f\xd3\x65\xef\x5c\xd2\xaf\xa8\x2e\x31\x96\x9a\x19\xa9\xd2\xdd\xb2\x57\x4f\x9a\x72\x16\xa8\x14\x86\x30\x61\xab\x5e\xe8\x38\x81\x45\x64\x89\xda\x99\xb2\x57\xcb\xa3\xa1\x14\x21\xb3\x02\x5c\xad\xfe\x2c\xcd\x95\xc6\x5a\xa1\xfd\x20\x7c\x7f\xf4\xef\x84\x70\x9d\x7e\x7b\x70\x89\x0b\x3f\x2f\xc6\x19\xa9\xdd\x6e\x5d\x90\x38\x66\x62\xe9\x50\x83\x9b\xe0\x12\x97\x4c\x8a\x99\x1c\x5c\x8c\x53\xbe\x44\x7b\x48\xb4\xf1\xba\x7e\xe6\xd1\xc1\xc5\x78\x7c\xee\x03\x89\x98\x47\x4e\x48\xef\xa8\x17\x92\x1a\xb0\xd7\x00\x3c\x3a\x7a\xbb\xe8\x1f\xf7\xba\x39\xf0\x01\x77\x48\x3c\x5d\x90\x70\xf1\x6e\xb1\xa8\x01\x9b\x24\x9e\xf6\xb0\xf3\x76\x81\xa9\x6a\x4c\x76\x4b\x24\xdd\xa3\xd3\x2e\x09\x7b\x39\x90\xa2\x30\x8a\xf0\x46\xec\xf1\xd1\xe2\xb8\xdf\xe9\xcf\xdd\x0c\x89\x3d\x21\x95\x59\xed\x5c\xfd\x29\x0d\x8f\x4f\x16\x8b\x30\x47\x6b\x99\x3c\x81\x26\xa7\x9d\x0e\xe9\x53\xb2\x8d\x6e\x5a\xde\xf1\xc9\xbb\xee\x1c\xfb\x47\xad\x4b\xd4\x32\x51\x14\xb5\xdf\xb2\x09\xf5\x9d\xff\x59\x56\xfb\x3f\x04\x48\x13\xc5\xcc\x1a\x3e\x2a\x99\xc4\xb6\x12\x31\x91\xa6\x51\x0e\xf9\x7e\x0d\x23\xaa\x73\xf1\x4e\x7a\xf3\xd1\x5b\x83\x38\xc4\x54\xc9\x18\x95\x6d\xc7\x72\x47\xb8\xb9\x8d\xca\x1a\x6c\xd8\x9e\x41\xd3\x43\x1e\x5e\x5d\xe2\x02\xda\xee\xc3\x96\xff\x06\x6b\x06\x93\xb3\x58\x2a\xa3\x5f\x60\xd5\x58\x2c\x15\x6a\xfd\x94\x71\xa5\xce\x4d\x3d\xed\x0c\x36\x8e\xa7\x4a\x1a\x49\x25\xf7\xc1\xd0\xdc\xdc\x0f\x4a\x46\x53\xa9\xec\x39\xd5\xef\x76\x3a\x9d\x1c\x3d\x93\x19\xf5\x6d\x95\x1a\xb8\xd0\xd7\x6d\x7b\x42\x71\x0b\xe0\x93\x31\xf1\x4f\x0b\x82\x15\xbe\x99\x41\x73\x34\x0f\x88\x02\x46\x93\x33\x20\x22\x74\x81\xca\xfa\x92\xa7\x22\xd4\x64\xea\x58\xcc\x65\x22\x76\x74\x6c\xdf\x1f\xa0\x2d\x3d\x2f\x8e\x50\x43\x74\x8e\x8f\xfb\xc7\x2f\x8a\x4e\x83\x56\xdb\x21\xe2\xfc\xa7\x45\xe7\x06\xe7\xcf\x05\xc7\x36\xac\x37\x52\xf1\xf0\x89\xd0\x34\x58\xf9\x69\x36\x9b\xb2\x9f\x13\x9c\x4d\x55\x2f\x8e\xcd\xd1\x51\x7f\x2b\x3a\x15\xda\x90\x85\x6a\x1c\xfb\xd0\x39\x70\x7f\x87\x9d\x8c\xde\x50\x18\x82\xe0\xd3\x4f\x5a\xdc\x77\x97\x86\x5e\x6f\x6b\x6d\x25\x69\x7b\x69\xad\x1f\x72\x34\x8c\x38\xd1\x86\x51\x98\x48\x12\xc2\x19\xe1\xb6\x93\x51\xb6\x01\x5a\xb0\x65\xa2\xdc\x1d\xfb\x7f\x3d\x23\xac\xf7\x87\xc1\xe4\x6c\xdb\xd1\xa9\x6e\xab\x3a\xd5\xcc\xc4\xf2\xba\xe7\xfb\x25\x21\x2b\x27\xdb\x3e\x77\x1d\x0f\xbc\x0a\x92\x79\x2a\xfb\x97\xbf\x9c\xc4\xc0\xde\xe3\xed\xdc\xb7\x7c\xb7\xd2\x15\x5a\x24\xcb\x2e\x6c\xde\x82\xd0\xbc\x21\x07\xa8\x2a\x1a\x18\xa3\xd8\x3c\x31\xa5\x0e\xcf\xb6\x4d\x3e\xb0\x90\xe3\x17\xc3\x22\x94\x89\x39\xc8\xfe\xfd\xa2\x91\x4a\x11\xea\x0c\x09\xe0\xfa\x77\x5b\xde\xcb\x2a\x9e\xde\xa8\x8a\x94\x2f\x6e\x89\x05\xa0\x9a\x24\xda\x87\x42\xeb\x33\x05\xcc\xdb\xb9\x89\x5c\x90\x5c\x54\x07\x37\x01\x44\x44\x90\x25\x86\x40\xad\xe7\x16\x8c\x12\x83\x39\x60\x9a\x5d\xd3\x87\xe5\xd4\x56\x70\x2a\x73\x17\x4e\x92\xaa\xd1\x76\xc4\xa5\xf2\x7c\x00\x85\x73\x5e\xfd\x5d\x32\x01\xb7\xaf\x5f\xef\xc3\xed\xeb\x37\x07\xaf\xf7\xd3\x15\x94\xd8\xbb\x3b\x67\x3b\x55\x48\x0c\x02\x67\xda\xa0\x40\xe5\x8a\x57\x98\xde\x9a\xc0\xd8\xee\xdc\xc0\x32\x2b\x8e\x83\xc9\xd9\x24\x83\xbd\x3c\xad\x32\x86\xb4\xaf\x3e\xc7\x18\x45\xa8\x7f\x4f\xdb\x8c\x00\xd5\x3d\xa3\x78\x29\x39\xa6\x36\xdf\xac\xd6\xc0\xec\x35\x91\x69\x10\x88\x21\x86\xbf\xfd\xb6\x63\xcd\x15\xaf\x14\x34\x1b\xa6\x0a\x7d\xa0\x44\x96\x08\x0d\xae\xcf\x5d\x97\xae\x74\x40\x8b\xfe\x3e\x15\x93\xae\x6c\x21\xd5\x03\x51\x61\x21\x7e\xe6\xfc\x91\xf6\x38\x85\xf0\xf6\xf9\xe8\xc3\xe0\x6a\x32\x1b\x0d\x83\xd9\xe0\xf2\xe3\xe5\xb4\xdd\x94\xe8\x25\xdc\x6d\x9d\x1c\xb3\x5d\x4e\xcb\x7a\x65\xcf\x82\xc0\xc6\x68\x53\xc1\x8b\x9d\x5f\xb1\x77\x87\x1b\x3f\x21\xe1\x66\x35\x5c\x21\xfd\xea\x9e\x57\xee\x09\x0f\xd2\x5d\xe6\x43\xb7\xb3\x0d\x9a\x12\xb3\xf2\xe1\xb0\x61\xa2\x66\xf6\xf6\xfc\x2c\xdd\xc3\x85\xf0\xe3\x1a\x64\x3d\x5b\x29\xd4\x2b\xc9\xc3\xa1\x4c\x84\xf1\xa1\xb7\x5d\x72\x66\x97\x1f\x77\x15\x9c\xd4\x8b\xef\x72\x7b\x2f\x88\xa1\xab\x3c\x47\x9d\x12\x63\xe2\xa1\x0c\xd1\x3d\xc2\x75\x9a\x3d\x9d\x11\xaf\xc4\xea\x69\x8b\xaa\x39\xb0\xab\x7a\x85\xa8\x70\xc9\xec\x6d\xd6\xa6\xd5\x97\x10\x39\x59\x3f\x5b\xc5\x7a\x85\x61\x3b\x7a\x85\xd1\x30\x18\x24\x46\x06\x94\x70\x26\x96\xcd\x4d\x4d\x05\x50\xfb\x78\x2a\x07\xae\xa7\xc3\x7f\x4a\x81\xe3\x10\x85\xdd\x1d\xa8\x72\xd5\x1b\x8f\x5e\x45\x5e\xbb\x97\x9b\xda\x69\x95\x85\x29\xe5\x4a\x6f\xd6\xa8\xf2\x17\x1c\x9d\x33\x5e\x30\xe1\x9e\x95\x8a\x87\xa3\xf2\xa5\x29\xe3\xcd\x3e\xdb\xc5\xee\xac\x3f\x80\xe5\x1b\xae\x4e\x4e\xd1\x43\x5b\xc7\x98\x14\x53\xc9\x19\x5d\xe7\x6b\xcb\xef\x74\x01\x5b\x0a\xc2\xcb\x8c\xc8\xd2\xd1\x87\xe9\xac\x7b\x7c\xe1\xc8\x57\x71\x48\x0c\xd6\xd9\x2b\x1e\xbc\xc4\x98\xbb\x63\x2c\xc5\x95\xa2\x6e\x18\xe7\xe9\xa4\x5d\x99\x51\x09\xb6\x7f\x4c\x93\x50\xb6\xf7\x95\xcb\xe3\x8f\xe9\x0b\x32\xb9\x0d\x5d\x98\x3d\x84\xb2\x3b\x45\xcb\xbd\xc9\x6c\xc4\xf2\xe9\x8c\x6b\x48\x8d\x1d\x49\x37\x8e\xc8\x12\x5d\x96\x7f\x60\x22\x1c\x8b\x0b\x12\xc3\x6d\xfd\x51\x24\x3b\xb1\xda\x4e\x4d\x4a\x6f\xef\xa7\x37\xf7\xbb\x17\x1d\xe7\x9b\x4d\x61\x7d\x76\xeb\xac\xcf\x2d\xab\x3e\x3c\x66\x26\x54\x69\x45\x6b\x49\xa2\x9c\x3c\x55\x72\xc1\x38\x96\x15\xbe\xb7\x31\x93\xf3\xd4\x9e\x8d\x20\x7b\x3a\x1a\x2f\xaa\x07\x58\xed\x7d\xa9\x42\x77\xa2\x9d\x2b\x3e\x4b\x57\x32\x36\xe7\xea\x2c\x57\x1a\xd5\x39\x31\xa4\xae\xea\x8c\x68\x7c\x7b\x94\x15\xd4\xff\x14\x53\x00\x7b\xaf\x0e\xe7\x4c\x1c\xce\x89\x5e\x81\xf7\x88\x95\x19\xa4\x2b\x69\x53\xe6\xcb\x70\x72\x15\xcc\x46\x97\xef\x7f\xf9\xab\x4c\xa0\x6f\xf0\xeb\xaf\x70\x88\x86\x1e\x22\xd5\xee\x97\x27\xea\x62\x5f\xe1\x5f\x27\x51\xfa\x5a\xc7\x39\x78\x6b\x20\x0f\xda\xa3\x0b\xe1\xcd\xa5\x34\xb6\x40\xc6\x15\xe8\xa1\x8c\xcd\x21\x79\xd0\xce\x14\x0b\xd2\x6e\xd7\x82\x87\xf0\xcb\x6f\xf9\x0f\x46\xb0\x75\x08\x80\xe7\xa9\x6c\x9b\x37\xd5\x48\x37\x6d\x93\x27\xe7\x4c\x53\xe9\x9b\xbb\x19\x8f\x86\x3d\xdb\x7e\x6c\x65\xf5\x78\x70\xe1\xfb\x76\x66\x47\xfa\x0e\xb4\x4e\x22\xd7\xb9\xa4\x05\xe3\x5c\xd2\x24\x42\x61\x4a\x77\x07\x86\x18\xac\x93\x3c\x18\x2d\x16\x48\x8d\x9f\x3e\x40\x57\x56\x3e\x55\x4c\x50\x16\x57\x2b\x54\x9a\xde\xae\x41\xf2\xe1\x16\x69\xef\x80\x44\xe4\x4f\x29\xc8\x83\x75\x72\x74\x57\x01\xa6\xdd\x8b\x0f\xb7\x6d\x6d\xb4\x5f\x9a\xd6\xce\x41\xf5\x53\xdb\x59\xcc\xaa\x87\x56\xba\x86\xca\x59\xeb\x7e\x88\x4b\x95\xef\x3a\x73\x33\x39\x0d\x2b\x6f\x5c\xfb\x53\xab\xaf\xae\x00\xa9\xf6\x5d\x29\xc7\x2c\xc5\xda\xfb\xe0\x88\xe7\xd9\x99\x8a\x6a\xab\x28\x15\x10\xa6\xa9\xbc\x47\x35\x95\x9c\x8f\x44\x18\x4b\x26\x4c\x7b\xbf\xa6\x08\x52\xa4\x45\xe4\x5c\x97\xcf\x89\x0d\x0c\x51\x66\x86\x1c\x23\x34\x6a\x1d\xa0\xd6\xae\x12\x35\xc9\x0d\x92\x79\xc4\xcc\x1b\xcb\xc9\xe5\x32\x5f\xc9\x44\x2e\x03\xa3\x90\x44\x05\x7d\x9a\x98\x89\x5c\x8e\xee\x51\x18\xdd\xbe\xab\x49\xca\x4f\x2c\x1f\xda\x6f\xda\x8d\x11\x9a\xc8\x65\x99\x78\x2f\x88\x46\xed\x17\xc8\x9e\xd7\xed\x78\xdd\x93\xf6\x0f\x88\x56\x8d\xe6\x41\x65\xc1\x6f\x9a\xa6\xaa\x6b\xde\x98\xd7\x7d\xff\x23\x9a\xdf\xe7\xff\x42\x6a\x9a\x9d\xb1\xc1\x40\x94\xf0\xc9\x83\xf6\x9d\xe0\x37\xf6\x6f\x07\x40\xf7\x7d\xdf\x4d\x6e\xd7\xe4\xe6\x3d\xbf\x01\xda\xb1\xfd\xeb\x1b\xca\x46\x43\xfb\x70\x5b\x54\xff\x6c\xf3\xb5\x7e\x77\x3f\x86\x3b\x2e\xa4\x9a\x56\x0f\xdd\xac\xeb\x2b\xae\x04\x79\xb6\xbb\xc9\xd1\x63\xec\x3a\xda\x7a\x13\x5c\x1c\x00\xc5\x5e\x4c\xe5\xf2\x79\x28\xb4\x28\x8e\x95\xad\xc7\xdc\xc1\xe4\x0c\xce\x3f\x07\x70\x75\x39\xa9\xa9\x4e\x2f\x88\xed\xf6\x3e\xdc\xbe\xfa\x88\x66\x60\x0c\xdc\xba\xcb\xc9\xbe\x85\xa7\x57\xc4\xbb\x9a\x3d\xb0\xdd\x95\x57\xf5\x7b\x4d\xb5\xc2\x01\x56\x52\x1b\x0c\xff\x94\x02\x59\xd8\x60\xe5\x1f\x32\x51\x85\x99\x9f\x1c\x16\x6c\x4b\x0a\xd9\xef\xc6\x2f\xb0\x78\x48\x84\x14\x8c\x12\x9e\xb2\xbb\x86\xf6\xfc\xa5\xf6\x57\xcd\xdb\xbd\x08\x9b\x53\xdb\xb6\xbb\x37\x9c\x79\xfe\x86\x43\x94\x68\x0c\x6f\x7e\xe3\x7b\xce\x12\xa2\x44\xa3\x01\x84\xcf\x79\xed\xea\x5d\xb3\x61\x10\xc7\x9c\x51\xc2\x8c\x14\x1b\x6f\x4a\xbc\x7a\xfd\xae\x1a\x55\xb9\xcb\x3f\x67\x58\x45\xf7\xb6\x6d\xff\x0d\x00\x00\xff\xff\xfe\xb8\x3c\x6e\xb1\x22\x00\x00")

func iasCloudformationEcsYmlBytes() ([]byte, error) {
	return bindataRead(
		_iasCloudformationEcsYml,
		"ias/cloudformation/ecs.yml",
	)
}

func iasCloudformationEcsYml() (*asset, error) {
	bytes, err := iasCloudformationEcsYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ias/cloudformation/ecs.yml", size: 8881, mode: os.FileMode(420), modTime: time.Unix(1520120249, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xe2, 0x59, 0xcd, 0xda, 0xf0, 0x4c, 0x65, 0xc5, 0x34, 0x34, 0x13, 0x46, 0xf1, 0x52, 0x9c, 0x77, 0xa5, 0xac, 0xa0, 0xf5, 0x80, 0x3a, 0x52, 0x52, 0xaa, 0x19, 0xb5, 0x17, 0x9c, 0x7e, 0xea, 0x47}}
	return a, nil
}

var _iasCloudformationVpcYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xdc\x59\x5f\x73\xda\x38\x10\x7f\xe7\x53\x6c\xc9\x43\x5f\x20\xc1\x76\x9b\xb9\xf8\x8d\x3f\x69\x8f\xbb\x23\xf1\x00\x07\x33\xcd\x74\x3a\xc2\xde\x10\x4d\x1c\xd9\x23\xcb\x4d\xf9\xf6\x37\x96\x8d\x84\x89\xa0\x36\xbd\xc0\xa4\xe4\x29\x2b\xed\xea\xb7\xfb\x5b\x56\xab\xa5\x3b\x9f\x4c\xf1\x29\x0e\x89\xc0\x4f\x11\x7f\x22\x62\x86\x3c\xa1\x11\x73\xe1\xbd\xdd\xb1\x3a\xed\xce\x55\xbb\x73\xf5\xbe\xd1\x00\x38\x83\x31\x2e\x69\xc4\x48\x08\x23\x12\x37\x46\x24\x8e\x29\x5b\x26\x6e\x03\x8a\x85\x11\x89\xb3\x7f\x00\xd2\xa4\x8d\x24\x11\x6d\x2b\xff\x17\xa0\xfb\xc5\x72\xb5\x94\x28\xa9\xbd\x21\x5d\x28\xa9\xb3\x21\xf5\xd7\x06\x9f\xd1\x64\x30\x97\x6e\x1b\xcc\xa5\xdb\x06\x73\x69\xd9\xa0\x6d\x34\x68\x1b\x0d\xda\x46\x83\xb6\xdf\x68\x78\x84\x93\x27\x14\xc8\x65\x30\xa6\xc8\x08\x13\xb9\xe1\xe9\x2a\x46\x17\x26\x82\x53\xb6\x94\x82\x01\xde\x93\x34\x14\x2e\x0c\xae\x67\x85\x20\xf1\x39\x8d\x85\x0c\x79\xae\x0a\x8c\x3c\x61\x03\xa0\x4f\x03\xde\x0b\x23\xff\xf1\x67\xb6\xac\x2b\xfb\xdc\xba\xfc\xe3\xbc\x73\xde\xb9\xb0\x2e\x33\xaa\xe6\x13\xf0\x69\xc0\x93\x06\xc0\x7c\x32\xb9\xb1\x32\x53\x55\xad\x7c\x38\xef\x5c\xd8\x1f\x0a\x4d\xbb\x8e\xe6\xc7\x4d\x4d\xa7\x8e\xe6\xe5\x5a\xf3\xac\xeb\x79\x0a\x7a\xd7\xf3\x6a\x62\xb7\x14\x78\xa9\x5b\x0b\xbd\xf5\xb1\xa4\x5b\x0b\xbf\xa5\x1d\x18\xf4\x14\xfe\x41\xaf\x26\x7c\x47\xc1\xcf\x54\x6b\xa1\x77\x0a\xf4\x8d\x31\x26\x51\xca\x7d\x94\xb9\x38\xf3\xfa\x9b\x06\xba\xf3\x89\xeb\x5e\xf7\x6d\xd7\x9d\x79\x7d\x29\xf7\x78\x14\x23\x17\x34\xdf\x9e\x7d\xae\x19\x59\x84\x38\x60\xc9\x9f\x51\x22\xb2\x4c\x4c\x5c\x10\x3c\xc5\x62\x79\x2b\x29\xb3\xcf\x18\xef\x5d\x2d\x2f\xc4\x53\xb2\x54\x26\xdb\xf0\x37\xae\x5c\xb8\xc9\xd3\x3a\xff\xcc\x48\x98\xa2\xb6\x01\xd0\x1c\x75\x87\x37\xcd\x2c\x82\x67\xb2\xd8\x4c\xd2\x05\x43\x01\x3c\x4a\x05\x02\x49\x92\xc8\xa7\x24\xfb\x96\x24\x79\x2d\x9a\x4f\xf2\xa5\x22\xc5\xe5\x66\x6b\x9c\x49\xa6\x19\xfe\xae\x56\x30\x07\x20\xd7\x30\x2a\xec\x08\x4c\xae\x31\x0c\xb6\x1c\x57\x87\x17\x62\x6d\x72\x18\xb8\x50\xde\xeb\xa5\x8b\x90\xfa\x7a\xc7\x06\x76\xfb\x94\xd8\xed\x5f\xc3\xee\x9c\x12\xbb\x73\x18\xf6\x33\xe8\xc6\xb1\x4e\xa1\xec\x2b\x7f\xba\x1c\xd2\xa7\x57\x71\x86\xd3\xef\x44\x60\xc9\x1b\x65\xe0\x24\x69\xa4\x4f\xff\x55\xf8\x27\xc9\x24\x7d\xfa\x81\xf0\xcf\x60\xd0\xd3\xa9\x34\xe8\x9d\x30\x93\xd4\xe1\x07\xba\xb2\xd6\x3f\x49\x1e\xa9\xc3\x0f\xe5\x21\xbf\x39\xe6\xb8\x80\x29\x45\x5e\x1c\x93\xac\x57\x54\xa5\xde\xe7\xc6\x0e\xc4\xb3\xd8\x7f\x89\x61\x7d\x89\xee\xbe\x15\x55\xf3\xb5\x6e\x1d\xbf\x13\x1a\x92\x05\x0d\xa9\x58\x7d\x89\xd8\xc6\x05\xf8\xee\x13\x65\xc1\x30\xeb\xa1\xe1\x4e\xf7\xd3\x2d\x78\x37\xc6\x7b\x68\x4a\x94\xb9\xb4\xd9\xca\x9a\x55\xf8\x5a\x68\x8e\x48\x9c\x57\xb7\x61\x7c\xcb\xfe\x21\x29\xf3\x1f\x4a\xf7\xb5\xe1\x1e\xce\xbb\xcc\xdd\x37\xb1\x44\x5e\xda\x54\xe9\x02\x7f\xf7\x57\x44\x19\xdc\x41\xb3\xd9\x82\xbb\xa6\xf4\xbc\xd9\xda\x34\x06\x5f\x25\x6a\x75\xe9\x1c\x97\x06\xfb\x15\x68\xb0\xdf\x04\x0d\xf6\x5e\x1a\x9c\xe3\xd2\xe0\xbc\x02\x0d\xce\x9b\xa0\xc1\x31\xd2\x50\xd4\xac\x6e\x1c\x87\xd4\x97\x35\xd3\x58\xbb\x74\x87\x70\x3c\xba\xf4\xf3\xeb\xd5\xaa\xd7\xa9\xf8\xc8\x5d\x33\x12\xa2\x9b\x99\x23\x47\xfa\x75\x0b\xd4\x49\x23\x6d\xae\x40\xba\xef\x3a\x72\xa4\x5f\xb7\x06\x9d\x34\xd2\x7b\x8b\xcc\x80\x08\xb2\x20\x09\xae\xdf\xd6\x01\xde\x53\x46\xf3\x47\x75\xb1\x49\xf5\x8f\xc7\xa3\x44\x4d\x49\x7e\xbb\x2a\x23\x3d\x33\x12\xa2\x3a\xdd\xe3\x86\xf9\xf7\x2c\x31\xd2\xb3\x7d\x79\x3f\x64\x02\x79\x96\xf0\x9f\x89\xc0\x39\x59\x49\x61\x3f\x62\x81\xcc\x7d\x12\xba\x00\xb7\x2c\x5c\x81\xcf\x91\x08\x04\x7a\x9f\x85\x13\x82\x08\x13\xf6\x5e\x00\x09\x39\x92\x60\x05\xf8\x83\x26\x42\xaa\x4e\x1f\x10\xc2\x68\x49\x7d\xa0\x09\x10\x08\xa9\x10\x21\xc2\x82\xf8\x8f\xcf\x84\x07\x49\x0b\xfc\x28\x0d\x03\x58\x20\x70\x7c\x8e\xf8\x23\x06\x6b\x2c\x6b\x24\x19\x90\x67\xb2\x32\xb3\xbf\xb5\x69\x47\x1a\xd4\x1e\xb0\x95\x83\x36\xfc\xdc\x6c\x15\x33\xb7\x22\x58\x35\x68\xd3\xb3\x3a\x20\x42\x10\xff\x01\xc4\x03\xc2\x52\xe1\xed\x4a\xe1\x5e\x27\x67\x5e\xbf\x58\xcf\x37\x3f\x21\xdb\x9f\xf0\xbb\xf2\x7d\x2b\x5a\x2f\x76\xbe\x8c\xe6\x8b\xa7\xa3\x19\x61\xe9\x69\x59\x1f\x57\x35\x7e\x60\x34\xf8\xe6\xcd\xa6\xdf\xc6\xb7\xff\x4e\xaf\x0f\x24\xe1\xc0\x0c\x18\x4f\x7b\xdb\x29\xb0\x3d\x27\x3b\x61\x60\x76\xc2\xf6\xc6\xd3\xff\x23\x73\x37\x5c\xdd\xe3\xa5\x5c\x19\x60\x8c\x2c\x48\x6e\x99\x5b\x4e\xec\x1d\xde\x97\xa6\x16\xe5\x20\x18\xe6\x90\xf9\x01\x89\xa0\x4c\x36\xff\xba\x7a\x43\xe7\x5c\xfe\x5d\x74\x8a\x5d\x55\x13\xbc\x71\x9b\x8a\x38\x15\xe5\xf9\x7f\xe9\x67\xa6\xac\xba\x0d\x83\xc6\x46\x16\xca\xd2\xbe\xa6\xe8\xfa\x47\x1c\x71\xb1\x3e\x25\xe3\xc6\xd5\x1c\xb4\x25\x09\x33\xaf\xbf\xf7\x5e\xb3\x0c\xa7\xaa\x35\xd3\xd9\xe5\xb9\x55\x05\x04\x4a\xe1\x4d\xe0\xb0\xf7\xe0\xb0\x77\x82\xb0\xeb\x82\xf8\x49\x9f\x6d\x8a\x86\x5e\x34\x85\x63\x6b\x30\x5d\x01\x8a\xd6\xa8\xf4\xba\x32\x63\xb1\xf7\x62\xa9\x1c\x16\xad\x51\xe9\xfd\x61\xc6\xe2\xec\xc5\xe2\xd4\xc6\x62\xee\xd0\xb7\x66\x93\x25\x28\x6a\xcd\x84\xa4\xfc\xf3\x53\x05\x20\x4a\xa1\xca\x70\xce\x88\xc3\xc8\x4e\xf9\xa7\xa4\x1a\x38\x2a\x4d\xa7\x8c\x38\x8c\xcc\x94\x7f\x16\xaa\x81\xc3\xc0\xcb\x7f\x01\x00\x00\xff\xff\x0a\xce\x71\x7d\x1c\x21\x00\x00")

func iasCloudformationVpcYmlBytes() ([]byte, error) {
	return bindataRead(
		_iasCloudformationVpcYml,
		"ias/cloudformation/vpc.yml",
	)
}

func iasCloudformationVpcYml() (*asset, error) {
	bytes, err := iasCloudformationVpcYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ias/cloudformation/vpc.yml", size: 8476, mode: os.FileMode(420), modTime: time.Unix(1520120255, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xeb, 0x11, 0xf2, 0x54, 0x91, 0x95, 0xf5, 0x0, 0xe, 0x1, 0xf8, 0x6e, 0xcc, 0x70, 0x66, 0xb1, 0x48, 0x33, 0x8e, 0xd8, 0xe2, 0x5d, 0x98, 0xd6, 0xae, 0xb4, 0xb4, 0x19, 0x2a, 0xba, 0x43, 0x4a}}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetString returns the asset contents as a string (instead of a []byte).
func AssetString(name string) (string, error) {
	data, err := Asset(name)
	return string(data), err
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// MustAssetString is like AssetString but panics when Asset would return an
// error. It simplifies safe initialization of global variables.
func MustAssetString(name string) string {
	return string(MustAsset(name))
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetDigest returns the digest of the file with the given name. It returns an
// error if the asset could not be found or the digest could not be loaded.
func AssetDigest(name string) ([sha256.Size]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s can't read by error: %v", name, err)
		}
		return a.digest, nil
	}
	return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s not found", name)
}

// Digests returns a map of all known files and their checksums.
func Digests() (map[string][sha256.Size]byte, error) {
	mp := make(map[string][sha256.Size]byte, len(_bindata))
	for name := range _bindata {
		a, err := _bindata[name]()
		if err != nil {
			return nil, err
		}
		mp[name] = a.digest
	}
	return mp, nil
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"ias/cloudformation/containertemplate.yml": iasCloudformationContainertemplateYml,

	"ias/cloudformation/ecs.yml": iasCloudformationEcsYml,

	"ias/cloudformation/vpc.yml": iasCloudformationVpcYml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"},
// AssetDir("data/img") would return []string{"a.png", "b.png"},
// AssetDir("foo.txt") and AssetDir("notexist") would return an error, and
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		canonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(canonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"ias": &bintree{nil, map[string]*bintree{
		"cloudformation": &bintree{nil, map[string]*bintree{
			"containertemplate.yml": &bintree{iasCloudformationContainertemplateYml, map[string]*bintree{}},
			"ecs.yml":               &bintree{iasCloudformationEcsYml, map[string]*bintree{}},
			"vpc.yml":               &bintree{iasCloudformationVpcYml, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory.
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively.
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(canonicalName, "/")...)...)
}
