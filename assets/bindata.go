// Code generated by go-bindata. DO NOT EDIT.
// sources:
// ias/cloudformation/containertemplate.yml
// ias/cloudformation/ecs.yml
// ias/cloudformation/vpc.yml

package assets

import (
	"bytes"
	"compress/gzip"
	"crypto/sha256"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes  []byte
	info   os.FileInfo
	digest [sha256.Size]byte
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _iasCloudformationContainertemplateYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x59\x6d\x6f\x1b\x37\xf2\x7f\xbf\x9f\x62\x6a\x17\x10\x50\x78\x6d\xd9\x89\x63\x9b\x80\xf1\xc7\x5a\x56\x5c\xfd\x2b\x3b\x3a\xad\xf3\xd0\x06\x41\x40\x71\x47\x12\xcf\x2b\x72\x41\x72\xed\xa8\x45\xbf\xfb\x81\xe4\x3e\x70\x25\x39\xc9\xb5\xb8\xc3\xe5\x45\x61\x91\xc3\x79\xe2\x6f\xe6\x37\xdc\xee\x97\x9a\x2e\x90\x44\xfb\xf4\x49\x03\xcb\x65\x99\xcd\xa5\x5a\x51\xc3\xa5\x80\x82\xb2\x07\xba\x40\x88\x63\x83\xab\x22\xa7\x06\xe3\x39\xcf\x11\xe8\x8a\xfe\x2e\x05\xa7\xc2\xa0\xa0\xc2\x1c\xae\x57\x39\xc4\xb1\x2c\x4d\x51\x9a\xaf\x8b\x56\x42\xd5\x09\xfd\x22\x9e\x95\xec\x01\x0d\x30\xae\x58\x8e\x8c\x1f\x66\x58\xe4\x72\x4d\x67\x39\xea\x9d\x2e\xf9\xfd\x6f\x79\xd4\x35\xc3\x68\x41\x67\x3c\xe7\x86\xa3\x86\x41\x32\x49\xae\x46\xe3\xd1\xfd\xaf\x9f\x47\xc9\xad\x75\xc2\x50\xf6\x10\x0b\xba\x0a\xb4\xc4\xc8\x74\xac\xb9\x58\xe4\x36\xf8\x82\x2a\xba\x42\x83\x2a\x96\x8f\xa8\x14\xcf\x50\xc3\xbb\x82\x8d\xb2\xcb\xc7\x82\xc5\xec\x8c\xd2\xb3\xb3\x19\x02\x32\xcd\xf2\x52\x1b\x54\x97\xbb\x14\xc5\xc3\x41\x3a\xf0\xfb\xf1\xf1\xcd\x9b\xf3\x49\x7a\xf3\x66\xf0\xf6\xf6\xf5\xaf\xf6\x60\x3e\xa3\x4a\x5c\x52\x25\x08\x7d\xd2\x04\x73\xaa\x0d\x67\xb9\xa4\xd9\x8c\xe6\x54\x30\x2e\x16\xa4\xd4\x31\x52\x6d\xe2\x63\xf2\xf2\xf8\xec\xd5\xf1\xe9\xcb\xfe\xc5\xc5\xd9\x4b\x62\xa8\x5a\xa0\x59\x28\x59\x16\x47\xc3\x41\x7a\x9f\x4c\x6f\xa6\x93\xa3\xfe\x39\x9e\x9f\xf5\x5f\x9d\xb2\x57\x27\xd8\xbf\x38\xa5\xde\x46\x26\xb4\x8d\xf3\x72\x38\x48\xc7\x57\xf1\xc5\x8b\xe3\xf3\xf3\xfe\xd9\x45\xff\xb0\x51\x7d\x88\xf9\xec\xd0\x3b\x4f\x9f\xf4\x21\x93\x2b\xa0\xf9\x2c\xe7\xda\xa0\x40\x75\xf9\x48\xf3\x12\xbd\xaa\xa5\xd4\x06\xb3\xdf\xa5\x40\x9e\x5d\xfe\xf6\xe2\x34\xfd\x70\xfd\xe6\x7e\xfa\x8f\xb3\x0f\x67\xbf\xc0\xcf\x6e\xef\x37\x29\xf0\xce\x5a\x7b\xd4\x3a\xc3\x47\xcc\x65\xb1\x42\x61\xac\xd2\x43\xb8\x96\xec\x01\xd5\x14\x75\x21\x35\x37\x52\xad\x2f\x1f\x51\x09\x29\xb4\x9c\x9b\x27\xaa\x50\xcb\xbc\xb4\xf7\xad\x8f\x9a\x54\xfa\x2c\x72\xa1\x0d\x15\x0c\x21\x45\xf5\xc8\x99\xb7\x30\x53\x34\xcb\xa9\xd2\x28\xa2\x68\x3f\xbc\x93\x68\x5f\x97\x33\x81\x26\x9e\xbd\x3a\xce\xce\x8f\xe7\x78\x50\xfd\xee\x9f\xf4\x4f\x32\x76\x7a\x1e\x25\xef\xd3\xfb\x0a\x49\xaf\x1d\xc8\xde\xa1\xd2\x5c\x0a\x02\xbd\x93\xfe\x71\x3f\xee\x5f\xc4\xfd\x8b\x5e\x34\xa9\x21\xa0\x49\x04\xa1\x6d\xfb\x13\xe0\x7e\x5d\x20\x81\xd4\x28\x2e\x16\x6e\xe1\x1a\x35\x53\xbc\x30\x4e\x93\x95\x03\x39\x07\x26\x85\xa1\x5c\xa0\x8a\x00\x06\xf5\xdf\x7f\x47\x89\x03\x61\x78\x38\x79\x9f\x12\x32\x1c\x9c\x10\xf2\x6e\x32\x20\x64\x94\x6d\xeb\x49\x31\x47\x66\x80\xc2\xbb\xc9\x00\xcc\x92\x1a\xa0\x79\x2e\x9f\x34\xd4\x99\xd5\x40\x19\x43\xad\xc1\x48\x30\x4b\x84\x91\x30\xa8\x04\x9a\xc3\x08\x60\xa2\xb8\x54\xdc\xac\x43\x9b\x77\xe5\x6a\xe6\xbc\xd9\x30\x94\x8c\xaf\x40\x95\x39\x42\x51\x1d\x02\x51\x4b\x76\x01\xf2\x3d\xd1\x57\x47\xc0\x02\x0e\x2c\x86\x23\xd8\xc6\xe1\xf7\x28\x1a\xfa\xd2\x82\xb1\xa4\x19\x5c\xb9\xe2\x42\x05\x03\x2a\xa4\xe0\x82\xd1\xbc\x36\x64\x9d\x03\x97\xbf\xb0\x72\xfe\xba\x85\xeb\xbb\xd4\x5d\x61\xad\xd0\x96\xfa\x5f\x56\x96\x4c\xef\xbc\x9e\xaa\xdf\x7c\x97\xa6\x41\x0a\x55\xfb\x89\x20\xac\xea\xef\x39\x6c\xef\xb2\x96\x07\xaa\x44\x04\xc0\x57\x8e\x36\xbe\x7d\xd6\x97\xba\x97\x07\x85\x75\xc1\x47\xd1\x14\xb5\x2c\x15\x43\x4d\xa2\x08\x60\x1f\xa6\xc8\xa4\xca\x20\x45\x03\x73\xa9\xda\x66\xdc\x20\xb3\xad\xbc\xeb\xbb\xd4\x9b\xee\x00\x7f\x2a\x4b\x83\xa7\x2f\x08\xf1\x9a\x52\x34\x37\xb6\x2d\x56\x82\x13\x25\x0b\x54\x96\x03\xea\xa3\x5b\x40\x84\x1f\xfe\x5f\x72\x01\x1f\xf7\x0e\xf7\x0e\xe0\x23\xfc\x30\xc5\xf9\x86\x08\x1c\xc0\xde\xde\xa7\x4f\x8d\x82\x81\x5c\xd9\xa6\x46\x3c\x5e\x68\x81\x5f\x80\xe6\x9c\x6a\xf0\x6d\x19\x33\x5b\x45\x37\xdc\xe4\x74\x76\xd8\x1c\x6a\xdc\x0b\x3c\x89\xa1\x2d\x85\xfa\xdf\x0e\x6f\x82\xce\x03\x07\xbb\x1c\x0c\x7c\x6b\x72\x13\xac\x24\xd6\xb9\x7b\xe7\x5b\xd7\x56\xab\x65\x94\x11\xaf\x78\xab\xbe\x3a\x07\xae\xef\xd2\x2a\x67\x8d\x6c\x55\x24\xee\x36\x8d\xcc\x64\x0c\x0a\x57\xf2\x11\xc1\x2c\xb9\xfe\xbf\x08\xc0\xf1\xce\xb8\xc2\xd1\xb4\xcc\x71\xbb\x77\x79\xbc\x5b\xb8\x5f\xd5\xcc\xf7\xee\x84\x90\xf0\x50\xb4\xfb\x36\x13\xe6\x08\xa3\xfe\x19\x57\x6a\xe7\x52\x3d\x51\xd5\xfa\xee\x83\x77\xc0\x48\x94\xa8\xdc\xef\x35\xcc\xd9\x8b\xea\x8b\x15\x19\xdf\x50\xf8\x9a\x63\x9e\x11\xb0\x29\x89\x97\x48\xb3\xaa\xeb\xd9\x7f\xef\x2c\x33\x76\xae\xf3\x6f\x5d\x5e\x1d\x6e\xe0\x61\x50\xb1\xbd\x06\xd1\x55\x37\xf6\x22\xf5\x4f\x9f\x68\x1f\xce\x77\x27\x38\x48\xcb\x33\xf9\xfd\x19\x69\x6e\x96\x83\x25\xb2\x07\x47\x09\x8f\x34\x4f\x91\x49\x91\x69\x02\xc7\xfd\x6d\xa1\x09\x35\x4b\x02\x47\x3b\x36\x94\x34\x92\xc9\x9c\xc0\xcf\xf7\xf7\x93\xed\xfd\x7b\xbe\x42\x59\x9a\x46\xf9\x69\x47\x64\x7d\xbf\x54\xa8\x97\x32\xcf\x06\xb2\xb4\x95\x77\x52\x6d\x07\x68\x0c\x12\x5d\xa7\x4a\x2a\x43\xe0\xbc\xdf\xf6\x82\x6d\x17\x6e\xa9\x61\xcb\xba\x1f\x3a\x83\xc6\x14\x03\x99\xa1\x9b\x05\xfa\x75\xd6\xdf\x8a\xe5\xd7\x1d\x09\x11\x66\x8c\xe2\xb3\xd2\x60\x80\xa2\x5f\x70\x4d\x20\x43\x85\x0b\xae\x8d\x72\x53\xed\xe7\x0c\x73\xba\x3e\x34\x3e\xf0\xcf\xda\x47\xde\x05\x97\x73\xa2\xf6\xc1\x13\x7f\x85\x0c\xf7\xa3\x67\xab\x4e\xfb\xb8\x77\x4c\x04\x29\x21\x55\x52\xaa\x06\x5d\xa0\xc8\xf4\x1b\xd1\xba\xd5\x76\xd6\x67\xee\xbf\x22\x8f\xda\x6a\xcb\x3e\xb5\x53\xd7\xa8\xb9\xc2\x3a\x1b\xbd\xe3\x76\xdd\x8e\xec\xb6\x4d\x0e\xa4\x98\xf3\x45\xe9\x83\x6e\xf3\x7c\x4b\xbf\xf0\x55\xb9\x9a\xa0\x62\xae\x97\x9e\xf4\xfb\xed\x1e\x17\x76\xaf\xba\xfb\x46\xa4\x16\x68\x71\x5c\x8d\x66\x3e\x98\xee\x74\xe5\x3d\xee\xac\x05\x0d\xbc\x5a\xad\x10\xf2\xf2\xfc\xe5\xd7\x5b\x45\x53\x5a\x95\xd8\x54\xe6\x18\x74\x91\x2a\x8d\x76\xb5\xd7\xe0\x41\x3f\x5c\xe3\x9c\x0b\xee\x09\xd1\xcb\x1a\xaa\x1f\xb2\x66\xd5\x5d\x5f\x77\x69\xf7\x2d\x76\x95\x3d\x73\x55\xaf\xe9\x8a\xe7\xeb\x86\xce\x7a\xbd\x03\xf8\xe8\xad\x3a\x45\xa9\x7d\xf1\xd8\x2c\xf4\x0e\xc0\x3e\x50\x9a\xb6\xd3\x24\xa3\xb5\xd0\x26\xb5\x49\xcb\x37\x73\x3a\x72\xa3\x81\x97\x70\xb4\xdf\x66\xbb\x28\x09\xec\x9d\xf6\xf7\x9a\x15\x9b\xf6\x5b\x5a\x14\x5c\x2c\x74\xc8\x48\x71\x87\x6c\x76\xdc\x12\xb4\x10\xc1\x95\x54\x6b\xa7\x37\x50\x3c\xd4\x1a\x85\xe1\x34\x27\xb0\x67\x54\x89\x7b\x76\x31\xf2\xbd\x31\xb8\xa4\xad\x2c\x8f\x92\x5b\x3b\x49\x3c\x4f\x33\x5a\x97\x2b\x77\x74\x22\x73\xce\xd6\xd7\x92\x95\x6e\x04\x68\x2c\xa7\x86\x1a\xec\x2e\xc5\x30\x9c\xcf\x91\x19\x02\x89\x1d\xb6\x83\xd8\x26\x8a\x0b\xc6\x0b\x9a\x77\xe9\xb8\xf2\x90\xc0\x47\x64\xba\xfb\x22\x0b\x09\xde\x73\x1e\x81\x8f\x3d\x6d\x34\x69\x5d\xeb\xd5\x42\xdd\x26\xec\x3c\xe6\x61\x33\xf2\x31\xf8\x1b\x75\x4f\xd5\xa0\x49\x34\x27\x76\xc4\xb8\x33\xca\xaf\xc5\x19\xfa\xba\xf3\x79\x7b\x5d\x75\x44\x54\xa3\xfa\x21\xf2\x5a\xc9\x55\x58\xe0\xbd\x03\xf8\xd6\x59\x5f\xb2\xba\x77\xd0\x31\x0d\xcf\x9e\xb3\x73\xea\x0c\x7f\x7a\x56\xf3\x74\xd3\xa7\xf7\xdc\x2c\xbb\x3e\x7d\x97\xa5\xe9\xa6\x7f\xb6\x81\x9e\x6c\x38\xc0\x4e\x48\x52\x9a\xa5\x54\xfc\x77\x4c\x91\x95\x96\xcc\x5d\xf7\x19\x89\x85\x42\xad\x7b\x9f\x3a\xb6\xea\xf9\x99\x40\xef\x27\xd7\x3f\x2a\xd0\xa4\x8c\xe6\x5c\x2c\xc2\x29\x2f\xc0\x77\x52\x14\x39\x67\xae\x03\x27\xa5\x91\x95\x30\x21\xf6\x0f\x3a\xcb\xd1\x1f\xdb\x60\x09\x08\x71\xb1\x5d\x13\xb7\xf4\xcb\x80\x16\x94\xb9\x59\xa4\xa6\xc1\x5b\x2e\xda\xc5\xe3\xa8\xeb\xb3\x63\xaf\xa0\x3b\x55\xfa\x8f\x0e\xb6\xd9\xe5\x00\xec\xea\x0d\x9a\xc4\x98\x46\xf0\x00\xfc\xbc\xf4\x29\xe8\xc2\xc9\xf4\x8e\xb4\x82\x36\x38\xed\x83\xb3\x9b\x07\x90\x28\x51\x4b\xd7\xb1\x5e\xf3\x15\x0a\xff\xda\x47\xa6\x49\x4d\x9f\x21\x91\x45\x9d\x7a\xb4\x46\x75\x41\x99\xaf\x96\xed\x9c\xfb\x72\xf9\xb7\x72\xde\x9c\x7a\x26\xb7\x61\x85\x26\xa9\xc1\x22\x90\xae\x77\xeb\x07\x18\x16\x95\xc6\x20\xce\x06\x09\xed\xc0\xb0\x0b\x27\x35\x59\x05\x4a\xbc\xee\x67\x38\x3b\xc9\xfe\x59\x6a\x63\xeb\xdf\x1b\xaf\x98\x79\xb0\xa4\x62\x81\xa3\xe6\xe6\x03\x9e\x95\x79\x26\x9f\x04\x81\x57\x01\xb9\xa3\x51\x9c\x25\x8b\x85\xc2\x85\xd3\x5f\xe5\xec\x11\x55\xc8\x1a\xd6\xa7\xd6\x5e\x67\xca\xf6\x1a\xea\x79\x74\x2c\x9f\x50\x5d\xc9\x52\x64\xed\x84\x10\xe4\xa1\xd5\xe1\x67\x8c\x08\x60\x03\x25\xff\xf3\x6c\x40\x5b\x24\xc5\xb4\xf5\xfd\xbf\xc4\x10\x55\x81\x84\x96\xff\xb3\x4c\xf1\x4c\xb8\xc4\xf5\x4b\xf7\x65\xf8\xc9\x0e\xed\x4d\x1f\x4d\x72\xaa\x56\x7a\x63\x73\x52\x9a\x0a\x68\x76\x77\x47\xc3\x66\xba\x51\x50\x65\xba\x6a\xd0\x9a\xbc\x2d\x32\x6a\xea\xd5\x6f\xf5\xdf\x64\x7c\x75\xda\xef\x6b\x67\xc6\x42\x0e\xdf\x16\x5b\x80\x1a\x58\xbf\xde\x3b\xbf\x88\x13\x7c\x06\x58\xc3\x47\x9a\x97\x2e\xf0\x09\x2a\x2e\xed\x3b\xa8\x9d\xa8\x6d\x46\xb9\x25\x99\xcd\x5a\x69\x9e\x24\x56\xba\x79\x2d\x38\x3b\xdd\xef\x39\x76\x05\xf8\x1c\x64\xa9\xdc\xc7\x9d\x85\x7d\x57\x52\x83\x1a\x8c\x94\xb0\xa2\x62\xed\x5e\x46\x60\xe3\xa9\x3f\x5c\x78\x47\x08\xf4\x5e\x75\x35\xd7\x0f\xef\x7a\xc6\xdc\xd5\x12\x9b\xd4\x05\x1d\x34\x79\x9f\x1e\x05\x9d\x71\x38\xbe\xaa\x1f\x0c\x75\x5b\x0e\x60\xe8\x01\xd8\xce\x6e\x9b\x8f\x23\x6f\xba\x02\x68\xfb\x88\x5f\x15\x54\x71\x2d\xc5\x9b\xc2\x86\x27\x15\x81\x1b\x85\xd4\x12\xf1\x92\x8a\x26\x5b\x35\x63\x39\x94\x78\x4b\x36\x7a\xfb\xf6\xfb\x3c\x1c\x5f\x7d\x3e\xfd\xf0\xe1\xb3\x67\x83\x08\x60\x7f\xd0\x40\x6b\x2c\x17\xda\x11\x34\x71\x1f\xb0\xc2\x7b\xb6\x5b\xee\xbf\xf5\x93\x7a\x7f\xf3\x96\xf7\xc1\xbd\x5f\xbc\x40\xe7\xf3\x53\x2f\xb6\x94\x38\x1c\xa4\xf5\x6e\xcd\x8a\x1b\xd3\xbb\x63\xbf\x7d\x0f\x45\x63\x87\x5d\x29\x46\xe2\x9a\xae\xed\x83\xfc\x65\xf4\xc6\xfd\x2f\x10\x67\xea\xed\x74\x4c\x2a\x46\xef\x7c\x09\x76\xc9\x72\xa1\xa6\x56\x26\x0a\xf3\x99\x96\x33\xd8\x5b\x1a\x53\x68\x72\x74\xf4\xe3\x1f\x01\x01\xfe\x79\xf8\xe3\x1f\xdd\xef\x16\x7f\xfa\xb1\x7b\xf8\xa5\xb0\xe3\x79\xf7\x3d\xee\xf4\x74\xcf\xc7\x6f\xa7\xe3\xbd\x7f\x05\x00\x00\xff\xff\x00\x8f\xfd\x40\x78\x1a\x00\x00")

func iasCloudformationContainertemplateYmlBytes() ([]byte, error) {
	return bindataRead(
		_iasCloudformationContainertemplateYml,
		"ias/cloudformation/containertemplate.yml",
	)
}

func iasCloudformationContainertemplateYml() (*asset, error) {
	bytes, err := iasCloudformationContainertemplateYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ias/cloudformation/containertemplate.yml", size: 6776, mode: os.FileMode(420), modTime: time.Unix(1519965063, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x20, 0xf6, 0xeb, 0x4e, 0xd2, 0x6a, 0x92, 0x97, 0x2e, 0x3e, 0xd4, 0xd2, 0x27, 0x8, 0x44, 0x63, 0x38, 0x2d, 0x1a, 0x69, 0xb3, 0x72, 0xc5, 0x3b, 0xa0, 0x17, 0xd, 0x9a, 0xb, 0x4b, 0xf9, 0x6e}}
	return a, nil
}

var _iasCloudformationEcsYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x59\xfb\x6f\xdb\x38\xf2\xff\xdd\x7f\xc5\xb4\x59\xc0\xc0\x22\x4a\xfc\x48\xfa\x10\xbe\xdd\x85\xe3\xb8\xad\xbf\xe7\x74\x8d\xc8\x49\xb0\x17\x04\x05\x4d\x8d\x6c\xa2\x14\xa9\x23\xa9\x24\xde\xbd\xfd\xdf\x0f\xa4\xde\xb6\x9c\x04\xbd\xed\xb5\x28\x4a\x0d\x3f\xf3\xe0\xcc\x70\x38\xa4\x0f\x52\x4d\x56\xe8\x77\x0e\xc8\x83\x06\xca\x65\x1a\x46\x52\xc5\xc4\x30\x29\x20\x21\xf4\x1b\x59\x21\x78\x9e\xc1\x38\xe1\xc4\xa0\x17\x31\x8e\x5b\xb0\x63\xa4\xfa\x68\x13\x73\xf0\x3c\x99\x9a\x24\x35\x5b\x68\xa4\x3a\x9f\xc8\x51\x7a\xe8\x2d\x53\xfa\x0d\x0d\x50\xa6\x28\x47\xca\x8e\x42\x4c\xb8\xdc\x90\x25\x47\xdd\x6a\x49\x36\xbf\x63\xc8\x8e\x68\x4a\x12\xb2\x64\x9c\x19\x86\x1a\xc6\xa3\xf9\xe8\x6c\x3a\x9b\x2e\x7e\xff\x3a\x1d\x5d\x58\xc5\x86\xd0\x6f\x9e\x20\x31\x42\x2c\x65\xc8\xd1\xb3\x02\x34\x13\x2b\x6e\x17\x99\x10\x45\x62\x34\xa8\x3c\x79\x8f\x4a\xb1\x10\x35\xfc\x03\x37\x5f\x48\x8c\x1f\xc2\x34\x8e\x37\x5f\xbf\xe1\xa6\x0f\xd7\x09\x9d\x86\x1f\xee\x13\xea\xd1\xb7\x84\xbc\x7d\xbb\x44\x08\xd2\xa5\x40\x33\x0d\x3f\x68\x37\xf0\x96\x6f\xfa\xe1\xbb\x7e\x84\x87\xf9\x77\x6f\xd0\x1b\x84\xf4\xf4\x1d\x4c\x85\x36\x44\x50\x5c\x6c\x12\xfc\x60\x06\x47\x31\x86\x2c\x8d\xe1\x5c\xc6\x84\x09\xa7\xa8\xd3\x39\xa8\x8b\xee\x1c\x3c\x23\xb2\x33\xba\x09\x16\xb9\x53\x3e\x3a\x7f\x5d\xa3\xd2\x4c\x0a\x1f\xba\x83\x5e\xbf\xe7\xf5\xde\x7b\xbd\xf7\xdd\xce\xbc\x58\x9c\xf6\x3b\x50\x53\x68\xbf\x00\xac\x3d\x3e\x04\x46\x31\xb1\x72\x84\x73\xd4\x54\xb1\xc4\x38\x41\x19\x1a\x9c\xe3\x22\xa9\xc0\x2a\xb3\xb1\xe9\x40\xe1\x9f\x97\x48\xb1\x38\x90\x11\x10\x01\xf8\xc8\xb4\x61\x62\x05\x93\xf1\xc0\x8a\x98\x13\xa6\xc0\x48\x40\x61\x53\x00\x82\xe0\x33\x10\x4a\x51\x6b\x4b\x34\x6b\x84\xc9\x38\x00\x96\xfb\x4e\x1f\x75\x20\x0b\x42\x5d\xeb\xe8\x26\xf0\xfd\xc9\x78\xe0\xfb\xd7\xf3\xb1\xef\x4f\xc3\x5d\x03\x02\xe4\x48\x0d\x10\xb8\x9e\x8f\xc1\xac\x89\x01\xc2\xb9\x7c\xd0\x95\xe4\x2d\xad\x53\x61\x50\x09\x34\x56\xe1\x4d\x50\x04\xb9\xae\x75\xc6\xb4\xf9\xbf\x4a\x75\x06\xb1\xda\x7f\xd9\xaf\xde\x80\x79\x90\x90\x85\xd1\xea\x86\x8d\x4c\x15\x68\x37\x8b\xa1\x35\xce\xea\x1b\xf3\x54\x1b\x54\xff\x5b\xa5\xe7\xa8\x99\xc2\x70\x4c\x12\x42\x99\xd9\xd4\x95\x7e\x49\xe3\x25\xaa\x5c\x41\x44\x52\x6e\x7c\xe8\xf6\xbb\x2d\x61\x76\x40\x1b\xe8\xca\xad\x46\x02\x27\xa9\xa0\xeb\x52\xb3\x0d\x28\xcd\x96\x68\x15\x5f\x90\xc7\x80\xfd\x81\xdf\xa5\xf0\x82\x3c\xb2\x38\x8d\x41\xb4\x29\xb6\x51\xa6\x44\xc0\x12\x73\x0b\x30\xdc\x67\x43\x7d\x6f\xfa\xbb\x6a\x6c\xaa\x16\x82\xc1\x6c\x12\xdc\x97\xf2\xb9\xad\x76\x77\x33\xaa\xa4\xa3\x8e\x6c\xa2\x61\x78\x4d\x78\x8a\xda\x87\xdb\x62\xf2\xd0\xc2\x74\x4c\x38\x77\xa3\xac\x1c\xb8\x21\x27\x6a\x85\x87\x10\x0f\x4b\x62\x3c\xcc\x89\x4e\x22\xd8\xef\xc7\x0a\x35\x28\xc7\x27\x47\xd5\xa8\x46\xac\x03\x4e\x6a\xe3\x7e\xef\xb1\x21\x96\x96\xfc\xb4\xe2\xa7\x35\x7e\x5a\xe3\xa7\x27\x47\xef\xca\xf1\xf0\xa8\x1a\x6d\xc9\xac\xd9\x47\x87\x35\xf6\x61\xc5\xae\x4a\x76\x55\x2d\x4c\xd5\x18\x55\xc5\x98\x8b\x55\x35\x76\x36\x38\xaa\x0d\x07\xb5\xf1\x49\x6d\x9c\xc3\xef\x9c\x80\xb1\x14\xda\x28\xc2\x84\x69\x04\x7a\xce\x91\x68\x04\xba\x96\x52\x23\x10\xb8\x27\x9c\x85\xcd\xd0\xdb\x74\x39\x38\x97\xf4\x1b\xaa\x4b\x4c\xa4\x66\x46\xaa\x6c\xb7\x1c\x34\x93\xa6\x9a\x05\x2a\x85\x21\x4c\xd8\xaa\x17\x3a\x4e\x60\x31\x59\xa1\x76\xa6\x1c\x34\xf2\x68\x2c\x45\xc8\xac\x00\x57\xab\xbf\x48\x73\xa5\xb1\x51\x68\x3f\x0a\xdf\x9f\xfc\x2b\x25\x5c\x67\xdf\x1e\x5c\x62\xe4\x17\xc5\x38\x27\x75\xbb\x9d\x0b\x92\x24\x4c\xac\x1c\x6a\x74\x13\x5c\xe2\x8a\x49\xb1\x90\xa3\x8b\x69\xc6\x97\x6a\x0f\x89\x36\x5e\xdf\xcf\x3d\x3a\xba\x98\x4e\xcf\x7d\x20\x31\xf3\xc8\x5b\x32\x38\x19\x84\xa4\x01\x1c\xb4\x00\x4f\x4e\xde\x44\xc3\xd3\x41\xbf\x00\x3e\xe0\x1e\x89\xef\x23\x12\x46\xef\xa2\xa8\x01\x6c\x93\xf8\x7e\x80\xbd\x37\x11\x66\xaa\x31\xdd\x2f\x91\xf4\x4f\xde\xf7\x49\x38\x28\x80\x14\x85\x51\x84\xb7\x62\x4f\x4f\xa2\xd3\x61\x6f\xb8\x74\x33\x24\xf1\x84\x54\x66\xbd\x77\xf5\xef\x69\x78\xfa\x36\x8a\xc2\x02\xad\x65\xfa\x04\x9a\xbc\xef\xf5\xc8\x90\x92\x5d\x74\xdb\xf2\x4e\xdf\xbe\xeb\x2f\x71\x78\xd2\xb9\x44\x2d\x53\x45\x51\xfb\x1d\x9b\x50\xdf\xf9\xc7\xb2\xda\x7f\x10\x20\x4d\x15\x33\x1b\xf8\xa4\x64\x9a\xd8\x4a\xc4\x44\x96\x46\x05\xe4\xfb\x35\x4c\xa8\x2e\xc4\x3b\xe9\xed\x47\x6f\x03\xe2\x10\x73\x25\x13\x54\xb6\x1d\x2b\x1c\xe1\xe6\xb6\x2a\x6b\xb0\x65\x7b\x0e\xcd\x0e\x79\x78\x75\x89\x11\x74\xdd\x87\x2d\xff\x2d\xd6\x8c\x66\x67\x89\x54\x46\xbf\xc0\xaa\xa9\x58\x29\xd4\xfa\x29\xe3\x2a\x9d\xdb\x7a\xba\x39\x6c\x9a\xcc\x95\x34\x92\x4a\xee\x83\xa1\x85\xb9\x1f\x95\x8c\xe7\x52\xd9\x73\x6a\xd8\xef\xf5\x7a\x05\x7a\x21\x73\xea\x9b\x3a\x35\x70\xa1\x6f\xda\xf6\x84\xe2\x0e\xc0\x67\x63\x92\x1f\x16\x04\x2b\x7c\x3b\x83\x96\x68\x1e\x10\x05\x4c\x66\x67\x40\x44\xe8\x02\x95\xf7\x25\x4f\x45\xa8\xcd\xd4\xa9\x58\xca\x54\xec\xe9\xd8\xbe\x3f\x40\x3b\x7a\x5e\x1c\xa1\x96\xe8\x9c\x9e\x0e\x4f\x5f\x14\x9d\x16\xad\xb6\x43\xc4\xe5\x0f\x8b\xce\x0d\x2e\x9f\x0b\x8e\x6d\x58\x6f\xa4\xe2\xe1\x13\xa1\x69\xb1\xf2\xf3\x62\x31\x67\x3f\x26\x38\xdb\xaa\x5e\x1c\x9b\x93\x93\xe1\x4e\x74\x6a\xb4\x31\x0b\xd5\x34\xf1\xa1\x77\xe4\xfe\x1e\xf7\x72\x7a\x4b\x61\x08\x82\xcf\x3f\x68\x71\xdf\x5d\x1a\x06\x83\x9d\xb5\x55\xa4\xdd\xa5\x75\xfe\x96\xa3\x61\xc2\x89\x36\x8c\xc2\x4c\x92\x10\xce\x08\xb7\x9d\x8c\xb2\x0d\x50\xc4\x56\xa9\x72\x77\xec\xff\xf6\x8c\xb0\xde\x1f\x07\xb3\xb3\x5d\x47\x67\xba\xad\xea\x4c\x33\x13\xab\xeb\x81\xef\x57\x84\xbc\x9c\xec\xfa\xdc\x75\x3c\xf0\x2a\x48\x97\x99\xec\x9f\xfe\x74\x12\x03\x7b\x8f\xb7\x73\x7f\x15\xbb\x95\xae\xd1\x22\x59\x7e\x61\xf3\x22\x42\x8b\x86\x1c\xa0\xae\x68\x64\x8c\x62\xcb\xd4\x54\x3a\x3c\xdb\x36\xf9\xc0\x42\x8e\x5f\x0d\x8b\x51\xa6\xe6\x28\xff\xff\xab\x46\x2a\x45\xa8\x73\x24\x80\xeb\xdf\x6d\x79\xaf\xaa\x78\x76\xa3\x2a\x53\xbe\xbc\x25\x96\x80\x7a\x92\x68\x1f\x4a\xad\xcf\x14\x30\x6f\xef\x26\x72\x41\x72\x51\x1d\xdd\x04\x10\x13\x41\x56\x18\x02\xb5\x9e\x8b\x18\x25\x06\x0b\xc0\x3c\xbf\xa6\x8f\xab\xa9\x9d\xe0\xd4\xe6\x2e\x9c\x24\xd5\xa0\xed\x89\x4b\xed\xf9\x00\x4a\xe7\xbc\xfa\x7f\xc9\x04\xdc\xbe\x7e\x7d\x08\xb7\xaf\x7f\x3e\x7a\x7d\x98\xad\xa0\xc2\xde\xdd\x39\xdb\xa9\x42\x62\x10\x38\xd3\x06\x05\x2a\x57\xbc\xc2\xec\xd6\x04\xc6\x76\xe7\x06\x56\x79\x71\x1c\xcd\xce\x66\x39\xec\xe5\x69\x95\x33\x64\x7d\xf5\x39\x26\x28\x42\xfd\x5b\xd6\x66\x04\xa8\xee\x19\xc5\x4b\xc9\x31\xb3\xf9\x66\xbd\x01\x66\xaf\x89\x4c\x83\x40\x0c\x31\xfc\xf5\xd7\x3d\x6b\xae\x79\xa5\xa4\xd9\x30\xd5\xe8\x23\x25\xf2\x44\x68\x71\x7d\xe1\xba\x6c\xa5\x23\x5a\xf6\xf7\x99\x98\x6c\x65\x91\x54\x0f\x44\x85\xa5\xf8\x85\xf3\x47\xd6\xe3\x94\xc2\xbb\xe7\x93\x8f\xa3\xab\xd9\x62\x32\x0e\x16\xa3\xcb\x4f\x97\xf3\x6e\x5b\xa2\x57\x70\xb7\x75\x0a\xcc\x6e\x39\xad\xea\x95\x3d\x0b\x02\x1b\xa3\x6d\x05\x2f\x76\x7e\xcd\xde\x3d\x6e\xfc\x8c\x84\x9b\xf5\x78\x8d\xf4\x9b\x7b\x5e\xb9\x27\x3c\xc8\x76\x99\x0f\xfd\xde\x2e\x68\x4e\xcc\xda\x87\xe3\x96\x89\x86\xd9\xbb\xf3\x8b\x6c\x0f\x97\xc2\x4f\x1b\x90\xcd\x62\xad\x50\xaf\x25\x0f\xc7\x32\x15\xc6\x87\xc1\x6e\xc9\x59\x5c\x7e\xda\x57\x70\x32\x2f\xbe\x2b\xec\xbd\x20\x86\xae\x8b\x1c\x75\x4a\x8c\x49\xc6\x32\x44\xf7\x08\xd7\x6b\xf7\x74\x4e\xbc\x12\xeb\xa7\x2d\xaa\xe7\xc0\xbe\xea\x15\xa2\xc2\x15\xb3\xb7\x59\x9b\x56\x5f\x43\xe4\x64\xf3\x6c\x15\x1b\x94\x86\xed\xe9\x15\x26\xe3\x60\x94\x1a\x19\x50\xc2\x99\x58\xb5\x37\x35\x35\x40\xe3\xe3\xa9\x1c\xb8\x9e\x8f\xff\x29\x05\x4e\x43\x14\x76\x77\xa0\x2a\x54\x6f\x3d\x7a\x95\x79\xed\x5e\x6e\x1a\xa7\x55\x1e\xa6\x8c\x2b\xbb\x59\xa3\x2a\x5e\x70\x74\xc1\x78\xc1\x84\x7b\x56\x2a\x1f\x8e\xaa\x97\xa6\x9c\x37\xff\xec\x96\xbb\xb3\xf9\x00\x56\x6c\xb8\x26\x39\x43\x8f\x6d\x1d\x63\x52\xcc\x25\x67\x74\x53\xac\xad\xb8\xd3\x05\x6c\x25\x08\xaf\x32\x22\x4f\x47\x1f\xe6\x8b\xfe\xe9\x85\x23\x5f\x25\x21\x31\xd8\x64\xaf\x79\xf0\x12\x13\xee\x8e\xb1\x0c\x57\x89\xba\x61\x9c\x67\x93\x76\x65\x46\xa5\xd8\xfd\x7b\x9a\x84\xaa\xbd\xaf\x5d\x1e\xff\x9e\xbe\x20\x97\xdb\xd2\x85\xd9\x43\x28\xbf\x53\x74\xdc\x9b\xcc\x56\x2c\x9f\xce\xb8\x96\xd4\xd8\x93\x74\xd3\x98\xac\xd0\x65\xf9\x47\x26\xc2\xa9\xb8\x20\x09\xdc\x36\x1f\x45\xf2\x13\xab\xeb\xd4\x64\xf4\xee\x61\x76\x73\xbf\x7b\xd1\x71\xbe\xdd\x14\x36\x67\x77\xce\xfa\xc2\xb2\xfa\xc3\x63\x6e\x42\x9d\x56\xb6\x96\x24\x2e\xc8\x73\x25\x23\xc6\xb1\xaa\xf0\x83\xad\x99\x82\xa7\xf1\x6c\x04\xf9\xd3\xd1\x34\xaa\x1f\x60\x8d\xf7\xa5\x1a\xdd\x89\x76\xae\xf8\x22\x5d\xc9\xd8\x9e\x6b\xb2\x5c\x69\x54\xe7\xc4\x90\xa6\xaa\x33\xa2\xf1\xcd\x49\x5e\x50\xff\x5d\x4e\x01\x1c\xbc\x3a\x5e\x32\x71\xbc\x24\x7a\x0d\xde\x23\xd6\x66\x90\xae\xa5\x4d\x99\xaf\xe3\xd9\x55\xb0\x98\x5c\x7e\xf8\xe9\xcf\x2a\x81\xfe\x82\x5f\x7e\x81\x63\x34\xf4\x18\xa9\x76\xbf\x3c\x51\x17\xfb\x1a\xff\x26\x8d\xb3\xd7\x3a\xce\xc1\xdb\x00\x79\xd0\x1e\x8d\x84\xb7\x94\xd2\xd8\x02\x99\xd4\xa0\xc7\x32\x31\xc7\xe4\x41\x3b\x53\x2c\x48\xbb\x5d\x0b\x1e\xc2\x4f\xbf\x16\x3f\x18\xc1\xce\x21\x00\x9e\xa7\xf2\x6d\xde\x56\x23\xdd\xb4\x4d\x9e\x82\x33\x4b\xa5\xbf\xdc\xcd\x78\x32\x1e\xd8\xf6\x63\x27\xab\xa7\xa3\x0b\xdf\xb7\x33\x7b\xd2\x77\xa4\x75\x1a\xbb\xce\x25\x2b\x18\xe7\x92\xa6\x31\x0a\x53\xb9\x3b\x30\xc4\x60\x93\xe4\xc1\x24\x8a\x90\x1a\x3f\x7b\x80\xae\xad\x7c\xae\x98\xa0\x2c\xa9\x57\xa8\x2c\xbd\x5d\x83\xe4\xc3\x2d\xd2\xc1\x11\x89\xc9\x1f\x52\x90\x07\xeb\xe4\xf8\xae\x06\xcc\xba\x17\x1f\x6e\xbb\xda\x68\xbf\x32\xad\x5b\x80\x9a\xa7\xb6\xb3\x98\xd5\x0f\xad\x6c\x0d\xb5\xb3\xd6\xfd\x10\x97\x29\xdf\x77\xe6\xe6\x72\x5a\x56\xde\xba\xf6\xa7\x56\x5f\x5f\x01\x52\xed\xbb\x52\x8e\x79\x8a\x75\x0f\xc1\x11\xcf\xf3\x33\x15\xd5\x4e\x51\x2a\x21\x4c\x53\x79\x8f\x6a\x2e\x39\x9f\x88\x30\x91\x4c\x98\xee\x61\x43\x11\x64\x48\x8b\x28\xb8\x2e\x9f\x13\x1b\x18\xa2\xcc\x02\x39\xc6\x68\xd4\x26\x40\xad\x5d\x25\x6a\x93\x1b\xa4\xcb\x98\x99\x9f\x2d\x27\x97\xab\x62\x25\x33\xb9\x0a\x8c\x42\x12\x97\xf4\x79\x6a\x66\x72\x35\xb9\x47\x61\x74\xf7\xae\x21\xa9\x38\xb1\x7c\xe8\xfe\x5c\xbc\xaf\xed\xd4\x93\xf6\x7c\xdd\x02\xed\x49\xdd\x66\x32\xd8\x3c\xd1\x3e\xdc\x96\x95\x2b\x4f\x9c\xce\x6f\xee\x87\x5c\xc7\x85\x54\xd3\xfa\x81\x91\x77\x2c\x65\x3b\x5b\x44\xca\x4d\x4e\x1e\x13\xd7\x8d\x35\x1b\xb8\xb2\x78\x95\x79\x94\xc9\xe5\xcb\x50\x68\x51\x96\xc4\x9d\x87\xc8\xd1\xec\x0c\xce\xbf\x04\x70\x75\x39\x6b\xa8\xce\x2e\x37\xdd\xee\x21\xdc\xbe\xfa\x84\x66\x64\x0c\xdc\xba\xc6\xfa\xd0\xc2\xb3\xeb\xcd\x5d\xc3\x1e\xd8\xed\x28\xeb\xfa\xbd\xb6\x3c\x77\x80\xb5\xd4\x06\xc3\x3f\xa4\x40\x16\xb6\x58\xf9\xbb\x4c\x55\x69\xe6\x67\x87\x05\xdb\x4e\x41\xfe\x9b\xe7\x0b\x2c\x1e\x13\x21\x05\xa3\x84\x67\xec\xae\x19\x3b\x7f\xa9\xfd\x75\xf3\xf6\x2f\x82\x28\xd1\x62\xbb\x7b\x7f\x58\x16\xef\x0f\x44\x89\xd6\xf0\x16\xb7\x95\xe7\x2c\x21\x4a\xb4\x1a\x40\xf8\x92\x37\xae\x8d\x0d\x1b\x46\x49\xc2\x19\x25\xcc\x48\xb1\xf5\x1e\xc2\xeb\x57\xc7\xba\x51\xb5\x7b\xe8\x73\x86\xd5\x74\xef\xda\xf6\x9f\x00\x00\x00\xff\xff\x7a\x68\xaf\xd7\x6d\x21\x00\x00")

func iasCloudformationEcsYmlBytes() ([]byte, error) {
	return bindataRead(
		_iasCloudformationEcsYml,
		"ias/cloudformation/ecs.yml",
	)
}

func iasCloudformationEcsYml() (*asset, error) {
	bytes, err := iasCloudformationEcsYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ias/cloudformation/ecs.yml", size: 8557, mode: os.FileMode(420), modTime: time.Unix(1519965060, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xdf, 0xe8, 0x11, 0x45, 0x6c, 0x65, 0xf7, 0x7a, 0x14, 0x1d, 0x88, 0xb8, 0x72, 0xb8, 0xae, 0x8f, 0x9a, 0xcd, 0xf2, 0x93, 0xf8, 0x3d, 0x6d, 0xe2, 0x74, 0xfc, 0x61, 0x41, 0x93, 0x17, 0x59, 0xd2}}
	return a, nil
}

var _iasCloudformationVpcYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xdc\x59\x5f\x73\xda\x38\x10\x7f\xe7\x53\x6c\xc9\x43\x5f\x20\xc1\x76\x9b\xb9\xf8\x8d\x3f\x69\x8f\xbb\x23\xf1\x00\x07\x33\xcd\x74\x3a\xc2\xde\x10\x4d\x1c\xd9\x23\xcb\x4d\xf9\xf6\x37\x96\x8d\x84\x89\xa0\x36\xbd\xc0\xa4\xe4\x29\x2b\xed\xea\xb7\xfb\x5b\x56\xab\xa5\x3b\x9f\x4c\xf1\x29\x0e\x89\xc0\x4f\x11\x7f\x22\x62\x86\x3c\xa1\x11\x73\xe1\xbd\xdd\xb1\x3a\xed\xce\x55\xbb\x73\xf5\xbe\xd1\x00\x38\x83\x31\x2e\x69\xc4\x48\x08\x23\x12\x37\x46\x24\x8e\x29\x5b\x26\x6e\x03\x8a\x85\x11\x89\xb3\x7f\x00\xd2\xa4\x8d\x24\x11\x6d\x2b\xff\x17\xa0\xfb\xc5\x72\xb5\x94\x28\xa9\xbd\x21\x5d\x28\xa9\xb3\x21\xf5\xd7\x06\x9f\xd1\x64\x30\x97\x6e\x1b\xcc\xa5\xdb\x06\x73\x69\xd9\xa0\x6d\x34\x68\x1b\x0d\xda\x46\x83\xb6\xdf\x68\x78\x84\x93\x27\x14\xc8\x65\x30\xa6\xc8\x08\x13\xb9\xe1\xe9\x2a\x46\x17\x26\x82\x53\xb6\x94\x82\x01\xde\x93\x34\x14\x2e\x0c\xae\x67\x85\x20\xf1\x39\x8d\x85\x0c\x79\xae\x0a\x8c\x3c\x61\x03\xa0\x4f\x03\xde\x0b\x23\xff\xf1\x67\xb6\xac\x2b\xfb\xdc\xba\xfc\xe3\xbc\x73\xde\xb9\xb0\x2e\x33\xaa\xe6\x13\xf0\x69\xc0\x93\x06\xc0\x7c\x32\xb9\xb1\x32\x53\x55\xad\x7c\x38\xef\x5c\xd8\x1f\x0a\x4d\xbb\x8e\xe6\xc7\x4d\x4d\xa7\x8e\xe6\xe5\x5a\xf3\xac\xeb\x79\x0a\x7a\xd7\xf3\x6a\x62\xb7\x14\x78\xa9\x5b\x0b\xbd\xf5\xb1\xa4\x5b\x0b\xbf\xa5\x1d\x18\xf4\x14\xfe\x41\xaf\x26\x7c\x47\xc1\xcf\x54\x6b\xa1\x77\x0a\xf4\x8d\x31\x26\x51\xca\x7d\x94\xb9\x38\xf3\xfa\x9b\x06\xba\xf3\x89\xeb\x5e\xf7\x6d\xd7\x9d\x79\x7d\x29\xf7\x78\x14\x23\x17\x34\xdf\x9e\x7d\xae\x19\x59\x84\x38\x60\xc9\x9f\x51\x22\xb2\x4c\x4c\x5c\x10\x3c\xc5\x62\x79\x2b\x29\xb3\xcf\x18\xef\x5d\x2d\x2f\xc4\x53\xb2\x54\x26\xdb\xf0\x37\xae\x5c\xb8\xc9\xd3\x3a\xff\xcc\x48\x98\xa2\xb6\x01\xd0\x1c\x75\x87\x37\xcd\x2c\x82\x67\xb2\xd8\x4c\xd2\x05\x43\x01\x3c\x4a\x05\x02\x49\x92\xc8\xa7\x24\xfb\x96\x24\x79\x2d\x9a\x4f\xf2\xa5\x22\xc5\xe5\x66\x6b\x9c\x49\xa6\x19\xfe\xae\x56\x30\x07\x20\xd7\x30\x2a\xec\x08\x4c\xae\x31\x0c\xb6\x1c\x57\x87\x17\x62\x6d\x72\x18\xb8\x50\xde\xeb\xa5\x8b\x90\xfa\x7a\xc7\x06\x76\xfb\x94\xd8\xed\x5f\xc3\xee\x9c\x12\xbb\x73\x18\xf6\x33\xe8\xc6\xb1\x4e\xa1\xec\x2b\x7f\xba\x1c\xd2\xa7\x57\x71\x86\xd3\xef\x44\x60\xc9\x1b\x65\xe0\x24\x69\xa4\x4f\xff\x55\xf8\x27\xc9\x24\x7d\xfa\x81\xf0\xcf\x60\xd0\xd3\xa9\x34\xe8\x9d\x30\x93\xd4\xe1\x07\xba\xb2\xd6\x3f\x49\x1e\xa9\xc3\x0f\xe5\x21\xbf\x39\xe6\xb8\x80\x29\x45\x5e\x1c\x93\xac\x57\x54\xa5\xde\xe7\xc6\x0e\xc4\xb3\xd8\x7f\x89\x61\x7d\x89\xee\xbe\x15\x55\xf3\xb5\x6e\x1d\xbf\x13\x1a\x92\x05\x0d\xa9\x58\x7d\x89\xd8\xc6\x05\xf8\xee\x13\x65\xc1\x30\xeb\xa1\xe1\x4e\xf7\xd3\x2d\x78\x37\xc6\x7b\x68\x4a\x94\xb9\xb4\xd9\xca\x9a\x55\xf8\x5a\x68\x8e\x48\x9c\x57\xb7\x61\x7c\xcb\xfe\x21\x29\xf3\x1f\x4a\xf7\xb5\xe1\x1e\xce\xbb\xcc\xdd\x37\xb1\x44\x5e\xda\x54\xe9\x02\x7f\xf7\x57\x44\x19\xdc\x41\xb3\xd9\x82\xbb\xa6\xf4\xbc\xd9\xda\x34\x06\x5f\x25\x6a\x75\xe9\x1c\x97\x06\xfb\x15\x68\xb0\xdf\x04\x0d\xf6\x5e\x1a\x9c\xe3\xd2\xe0\xbc\x02\x0d\xce\x9b\xa0\xc1\x31\xd2\x50\xd4\xac\x6e\x1c\x87\xd4\x97\x35\xd3\x58\xbb\x74\x87\x70\x3c\xba\xf4\xf3\xeb\xd5\xaa\xd7\xa9\xf8\xc8\x5d\x33\x12\xa2\x9b\x99\x23\x47\xfa\x75\x0b\xd4\x49\x23\x6d\xae\x40\xba\xef\x3a\x72\xa4\x5f\xb7\x06\x9d\x34\xd2\x7b\x8b\xcc\x80\x08\xb2\x20\x09\xae\xdf\xd6\x01\xde\x53\x46\xf3\x47\x75\xb1\x49\xf5\x8f\xc7\xa3\x44\x4d\x49\x7e\xbb\x2a\x23\x3d\x33\x12\xa2\x3a\xdd\xe3\x86\xf9\xf7\x2c\x31\xd2\xb3\x7d\x79\x3f\x64\x02\x79\x96\xf0\x9f\x89\xc0\x39\x59\x49\x61\x3f\x62\x81\xcc\x7d\x12\xba\x00\xb7\x2c\x5c\x81\xcf\x91\x08\x04\x7a\x9f\x85\x13\x82\x08\x13\xf6\x5e\x00\x09\x39\x92\x60\x05\xf8\x83\x26\x42\xaa\x4e\x1f\x10\xc2\x68\x49\x7d\xa0\x09\x10\x08\xa9\x10\x21\xc2\x82\xf8\x8f\xcf\x84\x07\x49\x0b\xfc\x28\x0d\x03\x58\x20\x70\x7c\x8e\xf8\x23\x06\x6b\x2c\x6b\x24\x19\x90\x67\xb2\x32\xb3\xbf\xb5\x69\x47\x1a\xd4\x1e\xb0\x95\x83\x36\xfc\xdc\x6c\x15\x33\xb7\x22\x58\x35\x68\xd3\xb3\x3a\x20\x42\x10\xff\x01\xc4\x03\xc2\x52\xe1\xed\x4a\xe1\x5e\x27\x67\x5e\xbf\x58\xcf\x37\x3f\x21\xdb\x9f\xf0\xbb\xf2\x7d\x2b\x5a\x2f\x76\xbe\x8c\xe6\x8b\xa7\xa3\x19\x61\xe9\x69\x59\x1f\x57\x35\x7e\x60\x34\xf8\xe6\xcd\xa6\xdf\xc6\xb7\xff\x4e\xaf\x0f\x24\xe1\xc0\x0c\x18\x4f\x7b\xdb\x29\xb0\x3d\x27\x3b\x61\x60\x76\xc2\xf6\xc6\xd3\xff\x23\x73\x37\x5c\xdd\xe3\xa5\x5c\x19\x60\x8c\x2c\x48\x6e\x99\x5b\x4e\xec\x1d\xde\x97\xa6\x16\xe5\x20\x18\xe6\x90\xf9\x01\x89\xa0\x4c\x36\xff\xba\x7a\x43\xe7\x5c\xfe\x5d\x74\x8a\x5d\x55\x13\xbc\x71\x9b\x8a\x38\x15\xe5\xf9\x7f\xe9\x67\xa6\xac\xba\x0d\x83\xc6\x46\x16\xca\xd2\xbe\xa6\xe8\xfa\x47\x1c\x71\xb1\x3e\x25\xe3\xc6\xd5\x1c\xb4\x25\x09\x33\xaf\xbf\xf7\x5e\xb3\x0c\xa7\xaa\x35\xd3\xd9\xe5\xb9\x55\x05\x04\x4a\xe1\x4d\xe0\xb0\xf7\xe0\xb0\x77\x82\xb0\xeb\x82\xf8\x49\x9f\x6d\x8a\x86\x5e\x34\x85\x63\x6b\x30\x5d\x01\x8a\xd6\xa8\xf4\xba\x32\x63\xb1\xf7\x62\xa9\x1c\x16\xad\x51\xe9\xfd\x61\xc6\xe2\xec\xc5\xe2\xd4\xc6\x62\xee\xd0\xb7\x66\x93\x25\x28\x6a\xcd\x84\xa4\xfc\xf3\x53\x05\x20\x4a\xa1\xca\x70\xce\x88\xc3\xc8\x4e\xf9\xa7\xa4\x1a\x38\x2a\x4d\xa7\x8c\x38\x8c\xcc\x94\x7f\x16\xaa\x81\xc3\xc0\xcb\x7f\x01\x00\x00\xff\xff\x0a\xce\x71\x7d\x1c\x21\x00\x00")

func iasCloudformationVpcYmlBytes() ([]byte, error) {
	return bindataRead(
		_iasCloudformationVpcYml,
		"ias/cloudformation/vpc.yml",
	)
}

func iasCloudformationVpcYml() (*asset, error) {
	bytes, err := iasCloudformationVpcYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ias/cloudformation/vpc.yml", size: 8476, mode: os.FileMode(420), modTime: time.Unix(1519965066, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xeb, 0x11, 0xf2, 0x54, 0x91, 0x95, 0xf5, 0x0, 0xe, 0x1, 0xf8, 0x6e, 0xcc, 0x70, 0x66, 0xb1, 0x48, 0x33, 0x8e, 0xd8, 0xe2, 0x5d, 0x98, 0xd6, 0xae, 0xb4, 0xb4, 0x19, 0x2a, 0xba, 0x43, 0x4a}}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetString returns the asset contents as a string (instead of a []byte).
func AssetString(name string) (string, error) {
	data, err := Asset(name)
	return string(data), err
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// MustAssetString is like AssetString but panics when Asset would return an
// error. It simplifies safe initialization of global variables.
func MustAssetString(name string) string {
	return string(MustAsset(name))
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetDigest returns the digest of the file with the given name. It returns an
// error if the asset could not be found or the digest could not be loaded.
func AssetDigest(name string) ([sha256.Size]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s can't read by error: %v", name, err)
		}
		return a.digest, nil
	}
	return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s not found", name)
}

// Digests returns a map of all known files and their checksums.
func Digests() (map[string][sha256.Size]byte, error) {
	mp := make(map[string][sha256.Size]byte, len(_bindata))
	for name := range _bindata {
		a, err := _bindata[name]()
		if err != nil {
			return nil, err
		}
		mp[name] = a.digest
	}
	return mp, nil
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"ias/cloudformation/containertemplate.yml": iasCloudformationContainertemplateYml,

	"ias/cloudformation/ecs.yml": iasCloudformationEcsYml,

	"ias/cloudformation/vpc.yml": iasCloudformationVpcYml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"},
// AssetDir("data/img") would return []string{"a.png", "b.png"},
// AssetDir("foo.txt") and AssetDir("notexist") would return an error, and
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		canonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(canonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"ias": &bintree{nil, map[string]*bintree{
		"cloudformation": &bintree{nil, map[string]*bintree{
			"containertemplate.yml": &bintree{iasCloudformationContainertemplateYml, map[string]*bintree{}},
			"ecs.yml":               &bintree{iasCloudformationEcsYml, map[string]*bintree{}},
			"vpc.yml":               &bintree{iasCloudformationVpcYml, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory.
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively.
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(canonicalName, "/")...)...)
}
